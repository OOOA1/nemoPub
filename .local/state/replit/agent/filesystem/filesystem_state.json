{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Replit.md\n\n## Overview\n\nThis is a Telegram bot for NEMO Moscow, a construction and renovation company. The bot provides AI-powered construction inspection and interior design services through two specialized AI agents. Users can upload photos to receive professional analysis from an AI inspector for construction defects or an AI designer for interior design suggestions. The system includes subscription verification, usage limits, payment processing, referral systems, and a comprehensive admin dashboard for managing the bot.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **UI Library**: shadcn/ui components built on Radix UI primitives\n- **Styling**: Tailwind CSS with CSS custom properties for theming\n- **State Management**: TanStack Query (React Query) for server state management\n- **Routing**: Wouter for lightweight client-side routing\n- **Admin Interface**: Single-page dashboard with tabbed navigation for managing bot operations\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Telegram Integration**: Telegraf library for bot interactions and webhook handling\n- **AI Services**: OpenAI GPT-5 integration for image analysis and text generation\n- **Background Jobs**: Node-cron for scheduled tasks (weekly limit resets, subscription checks)\n- **Session Management**: Express sessions with PostgreSQL store\n- **File Structure**: Monorepo with shared schema and types between client/server\n\n### Database Layer\n- **ORM**: Drizzle ORM with PostgreSQL dialect\n- **Database Provider**: Neon Database (serverless PostgreSQL)\n- **Schema Design**: Comprehensive user tracking, AI request logging, payment records, broadcast management, and referral system\n- **Data Management**: Automated cleanup jobs and weekly usage limit resets\n\n### Authentication & Authorization\n- **Bot Access**: Telegram user authentication through bot interactions\n- **Subscription Control**: Channel membership verification for AI agent access\n- **Admin Access**: No explicit admin authentication system (admin panel is open)\n- **Usage Limits**: Per-user weekly request limits with premium upgrade options\n\n### AI Agent System\n- **Inspector Agent**: Analyzes construction photos for defects and quality issues\n- **Designer Agent**: Provides interior design suggestions based on uploaded images and user preferences\n- **Image Processing**: OpenAI Vision API for photo analysis\n- **Usage Tracking**: Request counting, processing time monitoring, and status tracking\n\n### Payment System\n- **Provider**: Telegram Payments integration\n- **Packages**: Predefined request packages for users to purchase additional AI agent uses\n- **Currency**: Russian Rubles (RUB)\n- **Tracking**: Complete payment history and status monitoring\n\n## Two-Bot System Setup\n\nThe system supports **2 separate bot environments** to avoid conflicts:\n\n### Bot Token Configuration\n- **Preview (Replit Workspace)**: `BOT_TOKEN_DEV` - New bot for development/testing\n- **Deploy (Replit Deploy)**: `BOT_TOKEN` - Existing bot for live deployment\n\n### Environment Detection\n- **Preview**: When running in Replit Workspace (default development environment)\n- **Deploy**: When `REPLIT_DEPLOYMENT=true` or `NODE_ENV=production`\n\n### Bot Management\n- Set `DISABLE_BOT=true` to disable bot in any environment\n- Each environment automatically selects appropriate token\n- Clear logging shows which bot/token is being used\n\n## External Dependencies\n\n- **Neon Database**: Serverless PostgreSQL hosting for data persistence\n- **OpenAI API**: GPT-5 model for AI analysis and text generation capabilities\n- **laozhang.ai API**: Cost-effective AI image generation and editing service\n- **Telegram Bot API**: Core bot functionality, webhook handling, and payment processing (3 separate bots)\n- **Replit Services**: Development environment with custom Vite plugins and error handling\n- **Node.js Libraries**: Express, Telegraf, Drizzle ORM, node-cron for core functionality\n- **Frontend Libraries**: React ecosystem including TanStack Query, Radix UI, Tailwind CSS, and Wouter","size_bytes":4191},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/botHandlers.ts":{"content":"import { Context } from 'telegraf';\nimport { storage } from './storage';\nimport { updateUserSubscriptionStatus } from './subscriptionChecker';\n\nexport async function handleStart(ctx: Context) {\n  // Only answer callback query if this is actually a callback query\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NEMO Moscow.\\n' +\n    '–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Ä–µ–º–æ–Ω—Ç–æ–º –ø–æ–¥ –∫–ª—é—á, –∞–≤—Ç–æ—Ä—Å–∫–∏–º –Ω–∞–¥–∑–æ—Ä–æ–º –∏ –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç–∞–º–∏.\\n' +\n    '–†–∞–±–æ—Ç–∞–µ–º —Å 2011 –≥–æ–¥–∞. –ü—Ä–æ–∑—Ä–∞—á–Ω–æ. –°—Ç–∏–ª—å–Ω–æ. –° –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üèó –†–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á', callback_data: 'renovation' }],\n          [{ text: 'üëÄ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫', callback_data: 'inspector' }],\n          [{ text: 'üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä', callback_data: 'designer' }],\n          [{ text: '‚ÑπÔ∏è –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º', callback_data: 'how_we_work' }],\n          [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', callback_data: 'website' }, { text: 'üó∫ –ù–∞—à –æ—Ñ–∏—Å', callback_data: 'office' }],\n          [{ text: '‚òéÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'leave_request' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleSubscriptionCheck(ctx: Context) {\n  await ctx.answerCbQuery();\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  const isSubscribed = await updateUserSubscriptionStatus(user.id, user.telegramId);\n  \n  if (isSubscribed) {\n    ctx.reply(\n      '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.\\n' +\n      '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ò–ò-–∞–≥–µ–Ω—Ç–∞–º–∏.\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üëÄ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫', callback_data: 'inspector' }],\n            [{ text: 'üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä', callback_data: 'designer' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n  } else {\n    ctx.reply(\n      '‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞.\\n' +\n      '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @nemo_moscow_channel\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'check_subscription' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n  }\n}\n\nexport async function handleRenovation(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    '–ú—ã –±–µ—Ä—ë–º –Ω–∞ —Å–µ–±—è –≤–µ—Å—å —Ü–∏–∫–ª —Ä–∞–±–æ—Ç ‚Äî –æ—Ç —á–µ—Ä–Ω–æ–≤–æ–π –æ—Ç–¥–µ–ª–∫–∏ –¥–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –º–µ–±–ª–∏—Ä–æ–≤–∫–∏.\\n' +\n    '–°—Ä–æ–∫–∏ –æ—Ç 2 –º–µ—Å—è—Ü–µ–≤. –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞.\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–µ–º–æ–Ω—Ç', callback_data: 'renovation_includes' }],\n          [{ text: '–ö–∞–∫ –º—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ', callback_data: 'quality_control' }],\n          [{ text: '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'leave_request' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleInspector(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  // Temporarily skip subscription check\n  // const isSubscribed = await updateUserSubscriptionStatus(user.id, user.telegramId);\n  // if (!isSubscribed) {\n  //   ctx.reply(\n  //     '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫–æ–º, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\\n' +\n  //     'üëâ @nemo_moscow_channel\\n\\n' +\n  //     '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª.\\n\\n' +\n  //     'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n  //     {\n  //       reply_markup: {\n  //         inline_keyboard: [\n  //           [{ text: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'check_subscription' }],\n  //           [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n  //         ]\n  //       }\n  //     }\n  //   );\n  //   return;\n  // }\n\n  // Check weekly limits\n  const weeklyRequests = await storage.getUserWeeklyRequests(user.id, 'inspector');\n  const totalLimit = 5 + user.totalPurchasedRequests;\n  \n  if (weeklyRequests >= totalLimit) {\n    ctx.reply(\n      '–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.\\n' +\n      `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${weeklyRequests}/${totalLimit}\\n\\n` +\n      '–í—ã –º–æ–∂–µ—Ç–µ:\\n' +\n      '‚Äî –î–æ–∫—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏\\n' +\n      '‚Äî –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏, –ø—Ä–∏–≥–ª–∞—Å–∏–≤ –¥—Ä—É–∑–µ–π\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üí≥ –î–æ–∫—É–ø–∏—Ç—å –ø–æ–ø—ã—Ç–∫–∏', callback_data: 'buy_requests' }],\n            [{ text: 'üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π', callback_data: 'referrals' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n    return;\n  }\n\n  // Set agent state for photo upload\n  await storage.setBotSetting(`agent_state_${user.id}`, JSON.stringify({ agent: 'inspector' }));\n  \n  ctx.reply(\n    'üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ 1 —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞.\\n' +\n    '–ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫ –æ—Ç–º–µ—Ç–∏—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ–¥–æ—á—ë—Ç—ã –∏ –¥–∞—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\\n\\n' +\n    '‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\\n' +\n    '‚Äî 1 —Ñ–æ—Ç–æ –∑–∞ —Ä–∞–∑\\n' +\n    '‚Äî –¥–æ 5 –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤ –Ω–µ–¥–µ–ª—é\\n\\n' +\n    `–û—Å—Ç–∞–µ—Ç—Å—è –ø–æ–ø—ã—Ç–æ–∫: ${totalLimit - weeklyRequests}\\n\\n` +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleDesigner(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  // Temporarily skip subscription check\n  // const isSubscribed = await updateUserSubscriptionStatus(user.id, user.telegramId);\n  // if (!isSubscribed) {\n  //   ctx.reply(\n  //     '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä–æ–º, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\\n' +\n  //     'üëâ @nemo_moscow_channel\\n\\n' +\n  //     '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª.\\n\\n' +\n  //     'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n  //     {\n  //       reply_markup: {\n  //         inline_keyboard: [\n  //           [{ text: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'check_subscription' }],\n  //           [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n  //         ]\n      //     }\n  //   );\n  //   return;\n  // }\n\n  // Check weekly limits\n  const weeklyRequests = await storage.getUserWeeklyRequests(user.id, 'designer');\n  const totalLimit = 5 + user.totalPurchasedRequests;\n  \n  if (weeklyRequests >= totalLimit) {\n    ctx.reply(\n      '–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.\\n' +\n      `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${weeklyRequests}/${totalLimit}\\n\\n` +\n      '–í—ã –º–æ–∂–µ—Ç–µ:\\n' +\n      '‚Äî –î–æ–∫—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏\\n' +\n      '‚Äî –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏, –ø—Ä–∏–≥–ª–∞—Å–∏–≤ –¥—Ä—É–∑–µ–π\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üí≥ –î–æ–∫—É–ø–∏—Ç—å –ø–æ–ø—ã—Ç–∫–∏', callback_data: 'buy_requests' }],\n            [{ text: 'üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π', callback_data: 'referrals' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n    return;\n  }\n\n  // Start design quiz\n  ctx.reply(\n    'üé® –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –∫–æ–º–Ω–∞—Ç—ã.\\n' +\n    '–ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä—å–µ—Ä –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ.\\n\\n' +\n    '‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\\n' +\n    '‚Äî 1 —Ñ–æ—Ç–æ –∑–∞ —Ä–∞–∑\\n' +\n    '‚Äî –¥–æ 5 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –Ω–µ–¥–µ–ª—é\\n\\n' +\n    `–û—Å—Ç–∞–µ—Ç—Å—è –ø–æ–ø—ã—Ç–æ–∫: ${totalLimit - weeklyRequests}\\n\\n` +\n    '‚ùì –ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤–∞–º –±–ª–∏–∂–µ?',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º', callback_data: 'style_minimalism' }],\n          [{ text: '–õ–æ—Ñ—Ç', callback_data: 'style_loft' }],\n          [{ text: '–ö–ª–∞—Å—Å–∏–∫–∞', callback_data: 'style_classic' }],\n          [{ text: '–°–∫–∞–Ω–¥–∏', callback_data: 'style_scandi' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleHowWeWork(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    '–ú—ã –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ—Å—Ç–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ:\\n\\n' +\n    '1Ô∏è‚É£ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤—ã–µ–∑–¥ –∏–Ω–∂–µ–Ω–µ—Ä–∞\\n' +\n    '2Ô∏è‚É£ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–º–µ—Ç–∞\\n' +\n    '3Ô∏è‚É£ –î–æ–≥–æ–≤–æ—Ä —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω–æ–π\\n' +\n    '4Ô∏è‚É£ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è + –∞–≤—Ç–æ—Ä—Å–∫–∏–π –Ω–∞–¥–∑–æ—Ä\\n' +\n    '5Ô∏è‚É£ –°–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '‚òéÔ∏è –û–±—Å—É–¥–∏—Ç—å —Å–≤–æ–π –æ–±—ä–µ–∫—Ç', callback_data: 'leave_request' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleLeaveRequest(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  ctx.reply(\n    'üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –Ω–∞—à –∏–Ω–∂–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏:\\n\\n' +\n    'üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n\n  // Set form state\n  await storage.setBotSetting(`lead_form_${user.id}`, JSON.stringify({\n    step: 'name',\n    interest: 'repair',\n    source: 'main_menu'\n  }));\n}\n\nexport async function handleReferral(ctx: Context) {\n  const user = (ctx as any).user;\n  if (!user) return;\n\n  const referralCode = await storage.getUserReferralCode(user.id);\n  const referralLink = `https://t.me/${process.env.BOT_USERNAME || 'nemo_moscow_bot'}?start=ref_${referralCode}`;\n  \n  // Get referral stats\n  // const referralStats = await storage.getReferralStats(user.id);\n  const referralStats = { totalReferrals: 0, bonusesGranted: 0 }; // Temporary mock\n\n  ctx.reply(\n    'üë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!\\n\\n' +\n    `üîó –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\\n${referralLink}\\n\\n` +\n    'üéÅ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –∏ –ø–æ–ø—Ä–æ–±—É–µ—Ç –±–æ—Ç–∞ ‚Äî +1 –ø–æ–ø—ã—Ç–∫–∞.\\n\\n' +\n    `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\\n` +\n    `‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: ${referralStats.totalReferrals}\\n` +\n    `‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: ${referralStats.bonusesGranted}\\n\\n` +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleLimitsCheck(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  const [inspectorRequests, designerRequests] = await Promise.all([\n    storage.getUserWeeklyRequests(user.id, 'inspector'),\n    storage.getUserWeeklyRequests(user.id, 'designer')\n  ]);\n\n  const baseLimit = 5;\n  const totalLimit = baseLimit + user.totalPurchasedRequests;\n  \n  ctx.reply(\n    'üìä –í–∞—à–∏ –ª–∏–º–∏—Ç—ã –Ω–∞ –Ω–µ–¥–µ–ª—é:\\n\\n' +\n    `üëÄ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫: ${inspectorRequests}/${totalLimit}\\n` +\n    `üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä: ${designerRequests}/${totalLimit}\\n\\n` +\n    `üíé –ë–∞–∑–æ–≤—ã–π –ª–∏–º–∏—Ç: ${baseLimit}/–Ω–µ–¥–µ–ª—è\\n` +\n    `üõí –î–æ–∫—É–ø–ª–µ–Ω–æ: ${user.totalPurchasedRequests}\\n\\n` +\n    '–õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫.\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üí≥ –î–æ–∫—É–ø–∏—Ç—å –ø–æ–ø—ã—Ç–∫–∏', callback_data: 'buy_requests' }],\n          [{ text: 'üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π', callback_data: 'referrals' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\n// Design quiz handlers\nexport async function handleStyleSelection(ctx: Context, style: string) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  await storage.setBotSetting(`design_quiz_${user.id}`, JSON.stringify({ style }));\n\n  const styleNames: { [key: string]: string } = {\n    minimalism: '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º',\n    loft: '–õ–æ—Ñ—Ç', \n    classic: '–ö–ª–∞—Å—Å–∏–∫–∞',\n    scandi: '–°–∫–∞–Ω–¥–∏'\n  };\n\n  ctx.reply(\n    `‚úÖ –í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: ${styleNames[style] || style}\\n\\n` +\n    '‚ùì –ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ?',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å', callback_data: 'priority_durability' }],\n          [{ text: '–£—é—Ç', callback_data: 'priority_comfort' }],\n          [{ text: '–≠—Å—Ç–µ—Ç–∏–∫–∞', callback_data: 'priority_aesthetics' }],\n          [{ text: '–°–∫–æ—Ä–æ—Å—Ç—å', callback_data: 'priority_speed' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handlePrioritySelection(ctx: Context, priority: string) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  const quizData = await storage.getBotSetting(`design_quiz_${user.id}`);\n  const quiz = quizData ? JSON.parse(quizData) : {};\n  quiz.priority = priority;\n  \n  await storage.setBotSetting(`design_quiz_${user.id}`, JSON.stringify(quiz));\n\n  const priorityNames: { [key: string]: string } = {\n    durability: '–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å',\n    comfort: '–£—é—Ç',\n    aesthetics: '–≠—Å—Ç–µ—Ç–∏–∫–∞',\n    speed: '–°–∫–æ—Ä–æ—Å—Ç—å'\n  };\n\n  ctx.reply(\n    `‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${priorityNames[priority] || priority}\\n\\n` +\n    '‚ùì –°–¥–µ–ª–∞—Ç—å –∞–∫—Ü–µ–Ω—Ç –Ω–∞:',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–û—Å–≤–µ—â–µ–Ω–∏–∏', callback_data: 'accent_lighting' }],\n          [{ text: '–ú–µ–±–µ–ª–∏', callback_data: 'accent_furniture' }],\n          [{ text: '–ú–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö', callback_data: 'accent_materials' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleAccentSelection(ctx: Context, accent: string) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  const quizData = await storage.getBotSetting(`design_quiz_${user.id}`);\n  const quiz = quizData ? JSON.parse(quizData) : {};\n  quiz.accent = accent;\n  \n  await storage.setBotSetting(`design_quiz_${user.id}`, JSON.stringify(quiz));\n  \n  // Set agent state for photo upload\n  await storage.setBotSetting(`agent_state_${user.id}`, JSON.stringify({ agent: 'designer' }));\n\n  const accentNames: { [key: string]: string } = {\n    lighting: '–û—Å–≤–µ—â–µ–Ω–∏–µ',\n    furniture: '–ú–µ–±–µ–ª—å', \n    materials: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã'\n  };\n\n  ctx.reply(\n    `‚úÖ –ê–∫—Ü–µ–Ω—Ç: ${accentNames[accent] || accent}\\n\\n` +\n    'üì∏ –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç–∞.\\n\\n' +\n    '–ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä —É—á—Ç—ë—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleBuyRequests(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    'üí≥ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:\\n\\n' +\n    'üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:\\n' +\n    '‚Ä¢ +3 –∑–∞–ø—Ä–æ—Å–∞ ‚Äî ‚ÇΩ299\\n' +\n    '‚Ä¢ +10 –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî ‚ÇΩ799\\n\\n' +\n    '–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –∑–∞–ø—Ä–æ—Å—ã –¥–æ–±–∞–≤—è—Ç—Å—è –∫ –≤–∞—à–µ–º—É –ª–∏–º–∏—Ç—É.\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '+3 –∑–∞–ø—Ä–æ—Å–∞ - ‚ÇΩ299', callback_data: 'buy_requests_3' }],\n          [{ text: '+10 –∑–∞–ø—Ä–æ—Å–æ–≤ - ‚ÇΩ799', callback_data: 'buy_requests_10' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleRenovationIncludes(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    'üîß –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á:\\n\\n' +\n    '‚ñ´Ô∏è –ß–µ—Ä–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã: –¥–µ–º–æ–Ω—Ç–∞–∂, —Å—Ç—è–∂–∫–∞, —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞, —ç–ª–µ–∫—Ç—Ä–∏–∫–∞, —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞\\n' +\n    '‚ñ´Ô∏è –ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã: —Ä–∞–∑–≤–æ–¥–∫–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π –ø–æ –ø—Ä–æ–µ–∫—Ç—É\\n' +\n    '‚ñ´Ô∏è –û—Ç–¥–µ–ª–∫–∞: —Ñ–∏–Ω–∏—à–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –Ω–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è, –ø–æ–∫—Ä–∞—Å–∫–∞\\n' +\n    '‚ñ´Ô∏è –ú–µ–±–µ–ª—å: –ø–æ–¥–±–æ—Ä –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç—É\\n' +\n    '‚ñ´Ô∏è –î–µ–∫–æ—Ä: —Ç–µ–∫—Å—Ç–∏–ª—å, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã, –æ—Å–≤–µ—â–µ–Ω–∏–µ\\n\\n' +\n    '–í—Å—ë ‚Äî —Å –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π –∏ –ø–æ –µ–¥–∏–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É.\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–ö–∞–∫ –º—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ', callback_data: 'quality_control' }],\n          [{ text: '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'leave_request' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleQualityControl(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  ctx.reply(\n    'üéØ –ö–∞–∫ –º—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ:\\n\\n' +\n    '‚ñ´Ô∏è –ö–∞–∂–¥—ã–π —ç—Ç–∞–ø —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç –∏–Ω–∂–µ–Ω–µ—Ä-–Ω–∞–¥–∑–æ—Ä—â–∏–∫\\n' +\n    '‚ñ´Ô∏è –í—ã –≤–∏–¥–∏—Ç–µ —Ñ–æ—Ç–æ- –∏ –≤–∏–¥–µ–æ–æ—Ç—á—ë—Ç—ã —Å –æ–±—ä–µ–∫—Ç–∞\\n' +\n    '‚ñ´Ô∏è –í—Å–µ —Ä–∞—Å—Ö–æ–¥—ã –ø—Ä–æ–∑—Ä–∞—á–Ω—ã ‚Äî –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–ª–∞—Ç\\n' +\n    '‚ñ´Ô∏è –ö–æ–Ω—Ç—Ä–æ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö\\n' +\n    '‚ñ´Ô∏è –ü—Ä–∏—ë–º–∫–∞ —Ä–∞–±–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞\\n\\n' +\n    '–†–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å–ª—É–∂–∏—Ç –≥–æ–¥–∞–º–∏.\\n\\n' +\n    'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: '–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–µ–º–æ–Ω—Ç', callback_data: 'renovation_includes' }],\n          [{ text: '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'leave_request' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n}\n\nexport async function handleConsultation(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  ctx.reply(\n    'üë®‚Äçüîß –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏–Ω–∂–µ–Ω–µ—Ä–∞\\n\\n' +\n    '–ù–∞—à –∏–Ω–∂–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –∏ —Å–ø–æ—Å–æ–±–æ–≤ –∏—Ö —Ä–µ—à–µ–Ω–∏—è.\\n\\n' +\n    '–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:\\n' +\n    '‚Ä¢ –í–∞—à–µ –∏–º—è\\n' +\n    '‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\\n' +\n    '‚Ä¢ –ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞\\n\\n' +\n    'üë§ –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n\n  // Set consultation form state\n  await storage.setBotSetting(`consultation_form_${user.id}`, JSON.stringify({\n    step: 'name',\n    source: 'inspector_consultation'\n  }));\n}\n\nexport async function handleDiscussProject(ctx: Context) {\n  if (ctx.callbackQuery) {\n    await ctx.answerCbQuery();\n  }\n  \n  const user = (ctx as any).user;\n  if (!user) return;\n\n  ctx.reply(\n    'üé® –û–±—Å—É–¥–∏—Ç—å –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç\\n\\n' +\n    '–ù–∞—à –¥–∏–∑–∞–π–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏ –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –∏–¥–µ–∏.\\n\\n' +\n    '–î–ª—è —Å–≤—è–∑–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:\\n' +\n    '‚Ä¢ –í–∞—à–µ –∏–º—è\\n' +\n    '‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\\n' +\n    '‚Ä¢ –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç—É\\n\\n' +\n    'üë§ –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',\n    {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    }\n  );\n\n  // Set project discussion form state\n  await storage.setBotSetting(`consultation_form_${user.id}`, JSON.stringify({\n    step: 'name',\n    source: 'designer_consultation'\n  }));\n}\n","size_bytes":22828},"server/cronJobs.ts":{"content":"import cron from 'node-cron';\nimport { storage } from './storage';\n\nexport function initializeCronJobs() {\n  // Reset weekly limits every Monday at 00:00\n  cron.schedule('0 0 * * 1', async () => {\n    try {\n      console.log('Running weekly limits reset...');\n      \n      // Reset all users' weekly request counts\n      await storage.resetWeeklyLimits();\n      \n      console.log('Weekly limits reset completed');\n    } catch (error) {\n      console.error('Error resetting weekly limits:', error);\n    }\n  }, {\n    timezone: \"Europe/Moscow\"\n  });\n\n  // Check subscription statuses every hour (temporarily disabled)\n  // cron.schedule('0 * * * *', async () => {\n  //   try {\n  //     console.log('Running subscription status check...');\n  //     \n  //     // Get all active users and verify their subscription status\n  //     const activeUsers = await storage.getActiveUsers();\n  //     \n  //     for (const user of activeUsers) {\n  //       // This would normally check against Telegram API\n  //       // For now, we'll implement a placeholder that maintains current status\n  //       await storage.updateUserSubscription(user.id, user.isSubscribed);\n  //     }\n  //     \n  //     console.log(`Checked ${activeUsers.length} user subscriptions`);\n  //   } catch (error) {\n  //     console.error('Error checking subscriptions:', error);\n  //   }\n  // });\n\n  // Cleanup old data monthly\n  cron.schedule('0 0 1 * *', async () => {\n    try {\n      console.log('Running monthly cleanup...');\n      \n      // Clean up old AI requests (older than 6 months)\n      const sixMonthsAgo = new Date();\n      sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n      \n      await storage.cleanupOldData(sixMonthsAgo);\n      \n      console.log('Monthly cleanup completed');\n    } catch (error) {\n      console.error('Error during monthly cleanup:', error);\n    }\n  });\n\n  console.log('Cron jobs initialized');\n}\n","size_bytes":1897},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/openai.ts":{"content":"import OpenAI from \"openai\";\nimport { GoogleGenAI, Modality } from \"@google/genai\";\nimport { URL } from \"url\";\n\n// the newest OpenAI model is \"gpt-5\" which was released August 7, 2025. do not change this unless explicitly requested by the user\nconst openai = new OpenAI({ \n  apiKey: process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY_ENV_VAR || \"default_key\"\n});\n\n// Laozhang.ai client for image generation\nconst laozhangClient = new OpenAI({\n  apiKey: process.env.LAOZHANG_API_KEY || \"default_key\",\n  baseURL: \"https://api.laozhang.ai/v1\"\n});\n\n// Google Gemini client for native image generation\nconst geminiClient = new GoogleGenAI({ \n  apiKey: process.env.GEMINI_API_KEY || process.env.GEMINI || \"default_key\" \n});\n\nexport interface InspectionResult {\n  defects: Array<{\n    type: string;\n    severity: '–Ω–∏–∑–∫–∞—è' | '—Å—Ä–µ–¥–Ω—è—è' | '–≤—ã—Å–æ–∫–∞—è';\n    description: string;\n    location: string;\n    cause: string;\n    consequences: string;\n    recommendation: string;\n  }>;\n  positiveAspects: string[];\n  summary: string;\n  recommendations: string[];\n}\n\nexport interface DesignResult {\n  description: string;\n  styleElements: string[];\n  colorPalette: string[];\n  recommendations: string[];\n  imageUrl?: string;\n}\n\nexport async function analyzeConstructionImage(imageUrl: string): Promise<InspectionResult> {\n  try {\n    console.log('üîç === INSPECTOR ANALYSIS STARTED ===');\n    console.log('üì∑ Analyzing image URL:', imageUrl);\n    console.log('ü§ñ Using model: gpt-4o');\n    console.log('üìù Sending detailed analysis prompt...');\n    \n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"–í—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –∏ —Ä–µ–º–æ–Ω—Ç—É. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ä–µ–º–æ–Ω—Ç–∞/—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –¥–µ—Ñ–µ–∫—Ç—ã. –û—Ç–≤–µ—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ JSON.\"\n        },\n        {\n          role: \"user\",\n          content: [\n            {\n              type: \"text\",\n              text: \"–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ —Ñ–æ—Ç–æ —Ä–µ–º–æ–Ω—Ç–∞. –ù–∞–π–¥–∏—Ç–µ –í–°–ï –≤–∏–¥–∏–º—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –¥–µ—Ñ–µ–∫—Ç—ã:\\n\\n- –¢—Ä–µ—â–∏–Ω—ã, –ø—è—Ç–Ω–∞, –ø—Ä–æ—Ç–µ—á–∫–∏\\n- –ù–µ—Ä–æ–≤–Ω—ã–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏\\n- –ü–ª–æ—Ö–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞/—à—Ç—É–∫–∞—Ç—É—Ä–∫–∞\\n- –≠–ª–µ–∫—Ç—Ä–∏–∫–∞/—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞\\n- –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\\n\\n–î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–µ—Ñ–µ–∫—Ç–∞ –æ–ø–∏—à–∏—Ç–µ: –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è, –≤ —á–µ–º –ø—Ä–æ–±–ª–µ–º–∞, –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.\\n\\n–û–¢–í–ï–¢ –°–¢–†–û–ì–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:\\n\\n{\\n  \\\"defects\\\": [\\n    {\\n      \\\"type\\\": \\\"–Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–∞\\\",\\n      \\\"severity\\\": \\\"–≤—ã—Å–æ–∫–∞—è\\\",\\n      \\\"description\\\": \\\"–ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\\\",\\n      \\\"location\\\": \\\"–≥–¥–µ –∏–º–µ–Ω–Ω–æ\\\",\\n      \\\"cause\\\": \\\"–ø—Ä–∏—á–∏–Ω–∞\\\",\\n      \\\"consequences\\\": \\\"—á–µ–º –≥—Ä–æ–∑–∏—Ç\\\",\\n      \\\"recommendation\\\": \\\"–∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å\\\"\\n    }\\n  ],\\n  \\\"positiveAspects\\\": [\\\"—á—Ç–æ —Å–¥–µ–ª–∞–Ω–æ —Ö–æ—Ä–æ—à–æ\\\"],\\n  \\\"summary\\\": \\\"–æ–±—â–∏–π –≤—ã–≤–æ–¥\\\",\\n  \\\"recommendations\\\": [\\\"–æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\\\"]\\n}\"\n            },\n            {\n              type: \"image_url\",\n              image_url: {\n                url: imageUrl\n              }\n            }\n          ]\n        }\n      ],\n      response_format: { type: \"json_object\" },\n      max_completion_tokens: 1500\n    });\n\n    console.log('‚úÖ OpenAI response received');\n    console.log('üìã Raw response content:');\n    console.log(response.choices[0].message.content);\n    \n    const result = JSON.parse(response.choices[0].message.content || '{}');\n    console.log('üîç Parsed JSON result:');\n    console.log('  - Defects found:', result.defects?.length || 0);\n    console.log('  - Positive aspects:', result.positiveAspects?.length || 0);\n    console.log('  - Summary:', result.summary || 'No summary');\n    console.log('  - Recommendations:', result.recommendations?.length || 0);\n    \n    const finalResult = {\n      defects: result.defects || [],\n      positiveAspects: result.positiveAspects || [],\n      summary: result.summary || '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω',\n      recommendations: result.recommendations || []\n    };\n    \n    console.log('üîç === INSPECTOR ANALYSIS COMPLETED ===');\n    return finalResult;\n  } catch (error) {\n    console.error('‚ùå Error analyzing construction image:', error);\n    console.error('‚ùå Error details:', JSON.stringify(error, null, 2));\n    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');\n  }\n}\n\n// URL validation to prevent SSRF attacks\nfunction validateImageUrl(url: string): void {\n  try {\n    const parsedUrl = new URL(url);\n    \n    // Only allow HTTP and HTTPS protocols\n    if (!['http:', 'https:'].includes(parsedUrl.protocol)) {\n      throw new Error('Only HTTP and HTTPS protocols are allowed');\n    }\n    \n    // Block private IP ranges and localhost\n    const hostname = parsedUrl.hostname.toLowerCase();\n    \n    // Block localhost variations\n    if (['localhost', '127.0.0.1', '::1'].includes(hostname)) {\n      throw new Error('Access to localhost is not allowed');\n    }\n    \n    // Block private IP ranges (simplified check for common ranges)\n    if (hostname.match(/^10\\.|^172\\.(1[6-9]|2[0-9]|3[01])\\.|^192\\.168\\./)) {\n      throw new Error('Access to private IP ranges is not allowed');\n    }\n    \n    // Block additional internal addresses\n    if (hostname.match(/^169\\.254\\.|^0\\.|^224\\.|^240\\./)) {\n      throw new Error('Access to internal IP addresses is not allowed');\n    }\n    \n  } catch (error) {\n    if (error instanceof TypeError) {\n      throw new Error('Invalid URL format');\n    }\n    throw error;\n  }\n}\n\nexport async function generateDesignConcept(\n  imageUrl: string, \n  style: string, \n  priority: string, \n  accent: string,\n  model: string = \"gpt-image-1\"\n): Promise<DesignResult> {\n  try {\n    // Validate the image URL to prevent SSRF attacks\n    validateImageUrl(imageUrl);\n    console.log(`üé® Starting image transformation with ${model}`);\n    console.log('üì∑ Original image URL:', imageUrl);\n    console.log('üéØ Style:', style, 'Priority:', priority, 'Accent:', accent);\n    \n    const transformationPrompt = `Transform this room to ${style} style with ${accent} accents. Keep same layout, change furniture and colors to match ${style} design.`;\n    let generatedImageUrl: string | undefined;\n\n    if (model === \"gpt-image-1\") {\n      // Use OpenAI DALL-E for reliable image generation\n      if (!process.env.OPENAI_API_KEY) {\n        throw new Error('OPENAI_API_KEY not found - OpenAI API required');\n      }\n      \n      console.log('üöÄ Using OpenAI DALL-E for gpt-image-1 model...');\n      \n      try {\n        generatedImageUrl = await generateImageWithOpenAI(transformationPrompt, style, accent);\n        \n        if (generatedImageUrl) {\n          console.log('‚úÖ SUCCESS: OpenAI DALL-E generated image for gpt-image-1');\n        }\n      } catch (error: any) {\n        console.log(`‚ùå OpenAI DALL-E failed:`, error.message);\n        throw new Error(`OpenAI DALL-E API error: ${error.message}`);\n      }\n\n    } else if (model === \"gemini-2.5-flash-image-preview\") {\n      // ONLY use native Gemini API - no fallback to laozhang  \n      if (!process.env.GEMINI_API_KEY) {\n        throw new Error('GEMINI_API_KEY not found - native Gemini API required');\n      }\n      \n      console.log('üöÄ Using NATIVE Google Gemini API with your secret key...');\n      \n      // Add timeout to prevent hanging requests (90 seconds)\n      const timeoutPromise = new Promise<never>((_, reject) => {\n        setTimeout(() => reject(new Error('Request timeout after 90 seconds')), 90000);\n      });\n      \n      generatedImageUrl = await Promise.race([\n        generateImageWithNativeGemini(imageUrl, transformationPrompt),\n        timeoutPromise\n      ]);\n      \n      if (!generatedImageUrl) {\n        throw new Error('Native Gemini API failed to generate image');\n      }\n    }\n\n    if (generatedImageUrl) {\n      console.log('üñºÔ∏è Image format:', generatedImageUrl.startsWith('data:') ? 'base64' : 'URL');\n      console.log('üñºÔ∏è Image size:', generatedImageUrl.length, 'characters');\n    } else {\n      console.log('‚ùå No generated image URL available');\n    }\n\n    return {\n      description: `–î–∏–∑–∞–π–Ω-–∫–æ–Ω—Ü–µ–ø—Ü–∏—è –≤ —Å—Ç–∏–ª–µ ${style} —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ ${accent}`,\n      styleElements: [`${style} —Å—Ç–∏–ª—å`, `–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${priority}`, `–ê–∫—Ü–µ–Ω—Ç: ${accent}`],\n      colorPalette: [`–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ ${style}`],\n      recommendations: [`–ü—Ä–∏–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å ${style}`, `–£—á—Ç–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ${priority}`, `–î–æ–±–∞–≤–ª–µ–Ω—ã ${accent} –∞–∫—Ü–µ–Ω—Ç—ã`],\n      imageUrl: generatedImageUrl\n    };\n    \n  } catch (error) {\n    console.error(`Error with ${model}:`, error);\n    \n    // If quota is insufficient or invalid size, return concept without image\n    if (error && typeof error === 'object' && 'code' in error && \n        (error.code === 'insufficient_quota' || error.code === 'invalid_value')) {\n      console.log('‚ö†Ô∏è Quota insufficient, returning design concept without image');\n      return {\n        description: `–î–∏–∑–∞–π–Ω-–∫–æ–Ω—Ü–µ–ø—Ü–∏—è –≤ —Å—Ç–∏–ª–µ ${style} —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ ${accent}`,\n        styleElements: [`${style} —Å—Ç–∏–ª—å`, `–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${priority}`, `–ê–∫—Ü–µ–Ω—Ç: ${accent}`],\n        colorPalette: [`–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ ${style}`],\n        recommendations: [`–ü—Ä–∏–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å ${style}`, `–£—á—Ç–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ${priority}`, `–î–æ–±–∞–≤–ª–µ–Ω—ã ${accent} –∞–∫—Ü–µ–Ω—Ç—ã`],\n        imageUrl: undefined // No image due to quota limits\n      };\n    }\n    \n    throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç–∞ —Å ${model}`);\n  }\n}\n\n// OpenAI DALL-E image generation function\nasync function generateImageWithOpenAI(transformationPrompt: string, style: string, accent: string): Promise<string | undefined> {\n  try {\n    console.log('üé® Using OpenAI DALL-E 3 for image generation');\n    console.log('üìù Prompt:', transformationPrompt);\n    \n    // Create a detailed prompt for DALL-E\n    const detailedPrompt = `Interior design: ${style} style room with ${accent} accents. ${transformationPrompt}. Modern, realistic, high quality interior photography style.`;\n    \n    const response = await openai.images.generate({\n      model: \"dall-e-3\",\n      prompt: detailedPrompt,\n      n: 1,\n      size: \"1024x1024\",\n      quality: \"standard\",\n    });\n\n    if (response.data && response.data[0] && response.data[0].url) {\n      console.log('‚úÖ Image generated successfully with OpenAI DALL-E');\n      console.log('üîó Image URL:', response.data[0].url);\n      return response.data[0].url;\n    } else {\n      console.log('‚ö†Ô∏è No image data found in OpenAI response');\n      return undefined;\n    }\n\n  } catch (error) {\n    console.error('‚ùå Error with OpenAI DALL-E:', error);\n    throw error;\n  }\n}\n\n// Native Gemini image generation function\nasync function generateImageWithNativeGemini(imageUrl: string, transformationPrompt: string): Promise<string | undefined> {\n  try {\n    console.log('üîß Using native Google Gemini 2.0 Flash Preview Image Editing');\n    console.log('üì• Downloading original image...');\n    \n    // Validate image URL before downloading\n    validateImageUrl(imageUrl);\n    \n    // Add timeout for image download\n    const downloadTimeout = new Promise<never>((_, reject) => {\n      setTimeout(() => reject(new Error('Image download timeout after 30 seconds')), 30000);\n    });\n    \n    const imageResponse = await Promise.race([\n      fetch(imageUrl),\n      downloadTimeout\n    ]);\n    \n    if (!imageResponse.ok) {\n      throw new Error(`Failed to download image: ${imageResponse.status} ${imageResponse.statusText}`);\n    }\n    \n    const imageBuffer = await imageResponse.arrayBuffer();\n    const imageBytes = new Uint8Array(imageBuffer);\n    console.log('‚úÖ Image downloaded, size:', imageBytes.length, 'bytes');\n    \n    // Check image size limits (max 20MB)\n    if (imageBytes.length > 20 * 1024 * 1024) {\n      throw new Error('Image too large: maximum 20MB allowed');\n    }\n\n    console.log('üìã Sending image editing request to native Gemini API...');\n    const response = await geminiClient.models.generateContent({\n      model: \"gemini-2.0-flash-preview-image-generation\",\n      contents: [\n        { \n          role: \"user\", \n          parts: [\n            {\n              inlineData: {\n                data: Buffer.from(imageBytes).toString(\"base64\"),\n                mimeType: \"image/jpeg\",\n              }\n            },\n            { \n              text: `EDIT THIS IMAGE: ${transformationPrompt}. Important: This is an IMAGE EDITING task - transform the existing room by changing furniture, colors, and decor while keeping the same architectural structure and layout. Generate an edited version of this exact room.`\n            }\n          ] \n        }\n      ],\n      config: {\n        responseModalities: [Modality.TEXT, Modality.IMAGE],\n      },\n    });\n\n    console.log('üìã Native Gemini response received');\n    \n    const candidates = response.candidates;\n    if (!candidates || candidates.length === 0) {\n      console.log('‚ö†Ô∏è No candidates in Gemini response');\n      return undefined;\n    }\n\n    const content = candidates[0].content;\n    if (!content || !content.parts) {\n      console.log('‚ö†Ô∏è No content parts in Gemini response');\n      return undefined;\n    }\n\n    // Look for image data in response parts\n    for (const part of content.parts) {\n      if (part.text) {\n        console.log('üìù Gemini text response:', part.text);\n      } else if (part.inlineData && part.inlineData.data) {\n        const base64Data = part.inlineData.data;\n        const imageDataUrl = `data:image/png;base64,${base64Data}`;\n        console.log('‚úÖ Image generated successfully with native Gemini API (base64 format)');\n        console.log('üìè Base64 length:', base64Data.length);\n        return imageDataUrl;\n      }\n    }\n\n    console.log('‚ö†Ô∏è No image data found in native Gemini response');\n    return undefined;\n\n  } catch (error) {\n    console.error('‚ùå Error with native Gemini API:', error);\n    throw error;\n  }\n}\n\n\n// Laozhang Gemini fallback function  \nasync function generateImageWithLaozhangGemini(imageUrl: string, style: string, accent: string, transformationPrompt: string): Promise<string | undefined> {\n  try {\n    console.log('üìã Transformation prompt:', transformationPrompt);\n\n    // Retry logic for rate limits\n    let attempts = 0;\n    const maxAttempts = 3;\n    let response;\n\n    while (attempts < maxAttempts) {\n      try {\n        console.log(`üöÄ Calling laozhang chat completions with gemini-2.5-flash-image-preview (attempt ${attempts + 1})...`);\n        \n        response = await laozhangClient.chat.completions.create({\n          model: \"gemini-2.5-flash-image-preview\",\n          messages: [\n            {\n              role: \"user\",\n              content: [\n                {\n                  type: \"text\", \n                  text: `EDIT: Transform this room to ${style} style with ${accent} focus. Keep same layout but change furniture, colors, materials to match ${style} aesthetic.`\n                },\n                {\n                  type: \"image_url\",\n                  image_url: {\n                    url: imageUrl\n                  }\n                }\n              ]\n            }\n          ],\n          max_tokens: 800\n        });\n        break; // Success, exit retry loop\n\n      } catch (error: any) {\n        attempts++;\n        console.log(`‚ùå Attempt ${attempts} failed:`, error.message);\n\n        if (error.status === 429 && attempts < maxAttempts) {\n          const delay = Math.pow(2, attempts) * 1000; // Exponential backoff\n          console.log(`‚è≥ Rate limit hit, waiting ${delay}ms before retry...`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          continue;\n        } else {\n          throw error; // Re-throw if not recoverable or max attempts reached\n        }\n      }\n    }\n\n    if (response) {\n      console.log('üìã gemini-2.5-flash-image-preview response received');\n      console.log('üîç Response status:', 'Success');\n      console.log('üîç Response content length:', response.choices?.[0]?.message?.content?.length || 0);\n    } else {\n      console.log('‚ùå No response received from gemini-2.5-flash-image-preview');\n      throw new Error('No response from Gemini API');\n    }\n    \n    // Check if response contains base64 image data\n    const messageContent = response.choices?.[0]?.message?.content;\n    if (messageContent) {\n      // Look for base64 image data in the response\n      const base64Match = messageContent.match(/data:image\\/[^;]+;base64,([A-Za-z0-9+/=]+)/);\n      if (base64Match) {\n        console.log('‚úÖ Image edited successfully with gemini-2.5-flash-image-preview (base64 format)');\n        console.log('üìè Base64 length:', base64Match[1].length);\n        return base64Match[0];\n      } else {\n        console.log('‚ö†Ô∏è No base64 image found in gemini response, checking for URL...');\n        // Check for URL patterns\n        const urlMatch = messageContent.match(/https?:\\/\\/[^\\s]+\\.(jpg|jpeg|png|webp)/i);\n        if (urlMatch) {\n          console.log('‚úÖ Image URL found in gemini response');\n          console.log('üîó Image URL:', urlMatch[0]);\n          return urlMatch[0];\n        } else {\n          console.log('‚ö†Ô∏è No image found in gemini-2.5-flash-image-preview response');\n          console.log('üìã Response content preview:', messageContent.substring(0, 200) + '...');\n        }\n      }\n    } else {\n      console.log('‚ö†Ô∏è No content in gemini-2.5-flash-image-preview response');\n    }\n    \n    return undefined;\n    \n  } catch (error) {\n    console.error('‚ùå Error with laozhang Gemini API:', error);\n    throw error;\n  }\n}\n\nexport function formatInspectionReport(result: InspectionResult): string {\n  let report = '';\n  \n  if (result.defects.length > 0) {\n    report += 'üîç **–î–ï–§–ï–ö–¢–´ –û–ë–ù–ê–†–£–ñ–ï–ù–´:**\\n\\n';\n    \n    result.defects.forEach((defect, index) => {\n      const severityEmoji = defect.severity === '–≤—ã—Å–æ–∫–∞—è' ? 'üî¥' : \n                           defect.severity === '—Å—Ä–µ–¥–Ω—è—è' ? 'üü°' : 'üü¢';\n      \n      report += `${index + 1}. ${severityEmoji} **${defect.type}** (${defect.severity})\\n`;\n      report += `üìç *–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:* ${defect.location}\\n`;\n      report += `üîé *–û–ø–∏—Å–∞–Ω–∏–µ:* ${defect.description}\\n`;\n      report += `‚ö†Ô∏è *–ü—Ä–∏—á–∏–Ω–∞:* ${defect.cause}\\n`;\n      report += `üí• *–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:* ${defect.consequences}\\n`;\n      report += `üõ† *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:* ${defect.recommendation}\\n\\n`;\n    });\n  } else {\n    report += '‚úÖ **–î–ï–§–ï–ö–¢–û–í –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û**\\n\\n';\n  }\n  \n  if (result.positiveAspects.length > 0) {\n    report += 'üëç **–ß–¢–û –°–î–ï–õ–ê–ù–û –•–û–†–û–®–û:**\\n';\n    result.positiveAspects.forEach(aspect => {\n      report += `‚Ä¢ ${aspect}\\n`;\n    });\n    report += '\\n';\n  }\n  \n  report += `üìã **–û–ë–©–ò–ô –í–´–í–û–î:**\\n${result.summary}\\n\\n`;\n  \n  if (result.recommendations.length > 0) {\n    report += 'üí° **–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:**\\n';\n    result.recommendations.forEach(rec => {\n      report += `‚Ä¢ ${rec}\\n`;\n    });\n    report += '\\n';\n  }\n  \n  return report;\n}\n\nexport function formatDesignReport(result: DesignResult): string {\n  let report = '';\n  \n  report += `üé® **–î–ò–ó–ê–ô–ù-–ö–û–ù–¶–ï–ü–¶–ò–Ø:**\\n${result.description}\\n\\n`;\n  \n  if (result.styleElements.length > 0) {\n    report += '‚ú® **–≠–õ–ï–ú–ï–ù–¢–´ –°–¢–ò–õ–Ø:**\\n';\n    result.styleElements.forEach(element => {\n      report += `‚Ä¢ ${element}\\n`;\n    });\n    report += '\\n';\n  }\n  \n  if (result.colorPalette.length > 0) {\n    report += 'üé® **–¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê:**\\n';\n    result.colorPalette.forEach(color => {\n      report += `‚Ä¢ ${color}\\n`;\n    });\n    report += '\\n';\n  }\n  \n  if (result.recommendations.length > 0) {\n    report += 'üí° **–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:**\\n';\n    result.recommendations.forEach(rec => {\n      report += `‚Ä¢ ${rec}\\n`;\n    });\n    report += '\\n';\n  }\n  \n  return report;\n}","size_bytes":20329},"server/payments.ts":{"content":"import { Context } from 'telegraf';\nimport { storage } from './storage';\n\nexport interface PaymentPackage {\n  id: string;\n  title: string;\n  description: string;\n  requests: number;\n  price: number; // in rubles\n  currency: string;\n}\n\nexport const paymentPackages: PaymentPackage[] = [\n  {\n    id: 'requests_3',\n    title: '+3 –∑–∞–ø—Ä–æ—Å–∞',\n    description: '3 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò-–∞–≥–µ–Ω—Ç–∞–º',\n    requests: 3,\n    price: 299,\n    currency: 'RUB'\n  },\n  {\n    id: 'requests_10',\n    title: '+10 –∑–∞–ø—Ä–æ—Å–æ–≤',\n    description: '10 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò-–∞–≥–µ–Ω—Ç–∞–º',\n    requests: 10,\n    price: 799,\n    currency: 'RUB'\n  }\n];\n\nexport async function createInvoice(ctx: Context, packageId: string) {\n  const user = (ctx as any).user;\n  if (!user) {\n    throw new Error('User not found');\n  }\n\n  const paymentPackage = paymentPackages.find(p => p.id === packageId);\n  if (!paymentPackage) {\n    throw new Error('Payment package not found');\n  }\n\n  // Create payment record in pending status\n  const payment = await storage.createPayment({\n    userId: user.id,\n    amount: paymentPackage.price.toString(),\n    currency: paymentPackage.currency,\n    requestsAdded: paymentPackage.requests,\n    status: 'pending'\n  });\n\n  const invoice = {\n    title: paymentPackage.title,\n    description: paymentPackage.description,\n    payload: payment.id, // Use our payment ID as payload\n    currency: paymentPackage.currency,\n    prices: [\n      {\n        label: paymentPackage.title,\n        amount: paymentPackage.price * 100 // Telegram expects price in kopecks\n      }\n    ]\n  };\n\n  await ctx.replyWithInvoice(invoice);\n}\n\nexport async function handlePreCheckoutQuery(ctx: Context) {\n  try {\n    // In a real implementation, you would validate the payment here\n    await ctx.answerPreCheckoutQuery(true);\n  } catch (error) {\n    console.error('Pre-checkout error:', error);\n    await ctx.answerPreCheckoutQuery(false, 'Payment validation failed');\n  }\n}\n\nexport async function handleSuccessfulPayment(ctx: Context) {\n  const user = (ctx as any).user;\n  if (!user || !ctx.message?.successful_payment) {\n    return;\n  }\n\n  const successfulPayment = ctx.message.successful_payment;\n  const paymentId = successfulPayment.invoice_payload;\n\n  try {\n    // Update payment status and add requests to user\n    const payment = await storage.updatePayment(paymentId, {\n      status: 'completed',\n      telegramPaymentChargeId: successfulPayment.telegram_payment_charge_id,\n      completedAt: new Date()\n    });\n\n    // Add purchased requests to user\n    const currentUser = await storage.getUser(user.id);\n    if (currentUser) {\n      await storage.updateUser(user.id, {\n        totalPurchasedRequests: currentUser.totalPurchasedRequests + payment.requestsAdded\n      });\n    }\n\n    ctx.reply(\n      `‚úÖ –ü–ª–∞—Ç—ë–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\\n` +\n      `–î–æ–±–∞–≤–ª–µ–Ω–æ ${payment.requestsAdded} –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò-–∞–≥–µ–Ω—Ç–∞–º.\\n\\n` +\n      `NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.`,\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üìä –û—Å—Ç–∞—Ç–æ–∫ –ø–æ–ø—ã—Ç–æ–∫', callback_data: 'limits' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n  } catch (error) {\n    console.error('Error processing successful payment:', error);\n    \n    ctx.reply(\n      '–ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. ' +\n      '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.'\n    );\n  }\n}\n\nexport function getPaymentKeyboard() {\n  return {\n    inline_keyboard: paymentPackages.map(pkg => [\n      { text: `${pkg.title} - ‚ÇΩ${pkg.price}`, callback_data: `buy_${pkg.id}` }\n    ]).concat([\n      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n    ])\n  };\n}\n","size_bytes":3979},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { bot } from \"./telegramBot\";\nimport { initializeCronJobs } from \"./cronJobs\";\nimport { generateDesignConcept } from \"./openai\";\nimport { getCurrentAISettings, updateAISettings } from \"./aiSettings\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Start bot in polling mode instead of webhook (non-blocking)\n  // Skip bot startup if disabled or no token available\n  const isDeployment = process.env.REPLIT_DEPLOYMENT === 'true' || process.env.NODE_ENV === 'production';\n  const botToken = isDeployment ? process.env.BOT_TOKEN : (process.env.BOT_TOKEN_DEV || process.env.BOT_TOKEN_PREVIEW);\n  \n  // –ë–æ—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω\n  const DISABLE_PREVIEW_BOT = false;\n  const DISABLE_DEPLOY_BOT = false;\n  \n  console.log('ü§ñ Bot startup check:');\n  console.log(`  - Environment: ${isDeployment ? 'DEPLOY' : 'PREVIEW'}`);\n  console.log(`  - Token available: ${!!botToken}`);\n  console.log(`  - Bot disabled: ${process.env.DISABLE_BOT === 'true'}`);\n  console.log(`  - Preview bot disabled: ${!isDeployment && DISABLE_PREVIEW_BOT}`);\n  \n  if (process.env.DISABLE_BOT === 'true') {\n    console.log('üîá Bot manually disabled via DISABLE_BOT=true');\n  } else if (!isDeployment && DISABLE_PREVIEW_BOT) {\n    console.log('üîá Preview bot temporarily disabled to prevent 409 conflicts with Deploy');\n    console.log('üí° Deploy bot will continue working normally');\n  } else if (isDeployment && DISABLE_DEPLOY_BOT) {\n    console.log('üîá Deploy bot temporarily disabled for testing Preview bot');\n    console.log('üí° Preview bot will run without conflicts');\n  } else if (!botToken) {\n    console.log('üîá Bot disabled - no token available for current environment');\n    console.log(`üîç Expected token: ${isDeployment ? 'BOT_TOKEN' : 'BOT_TOKEN_DEV'}`);\n  } else {\n    console.log('ü§ñ Bot will be initialized later in the proper startup sequence');\n    console.log(`üîç Environment: ${isDeployment ? 'DEPLOY' : 'PREVIEW'}`);\n    console.log(`üîç Token: ...${botToken.slice(-6)}`);\n  }\n\n  // API Routes for Admin Panel\n  \n  // Dashboard stats\n  app.get(\"/api/dashboard/stats\", async (req, res) => {\n    try {\n      const stats = await storage.getDashboardStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching dashboard stats:\", error);\n      res.status(500).json({ error: \"Failed to fetch dashboard stats\" });\n    }\n  });\n\n  // Recent activity\n  app.get(\"/api/dashboard/activity\", async (req, res) => {\n    try {\n      const activity = await storage.getRecentActivity(10);\n      res.json(activity);\n    } catch (error) {\n      console.error(\"Error fetching recent activity:\", error);\n      res.status(500).json({ error: \"Failed to fetch recent activity\" });\n    }\n  });\n\n  // Broadcasts\n  app.get(\"/api/broadcasts\", async (req, res) => {\n    try {\n      const broadcasts = await storage.getBroadcasts(20);\n      res.json(broadcasts);\n    } catch (error) {\n      console.error(\"Error fetching broadcasts:\", error);\n      res.status(500).json({ error: \"Failed to fetch broadcasts\" });\n    }\n  });\n\n  app.post(\"/api/broadcasts\", async (req, res) => {\n    try {\n      const { title, message, targetAudience } = req.body;\n      \n      if (!title || !message || !targetAudience) {\n        return res.status(400).json({ error: \"Missing required fields\" });\n      }\n\n      const broadcast = await storage.createBroadcast({\n        title,\n        message,\n        targetAudience,\n        status: \"sending\"\n      });\n\n      // Get target users\n      const targetUsers = await storage.getTargetUsers(targetAudience);\n      \n      // Send broadcast in background\n      sendBroadcastToUsers(broadcast.id, message, targetUsers);\n\n      res.json({ \n        ...broadcast, \n        targetCount: targetUsers.length\n      });\n    } catch (error) {\n      console.error(\"Error creating broadcast:\", error);\n      res.status(500).json({ error: \"Failed to create broadcast\" });\n    }\n  });\n\n  // Broadcast audience counts\n  app.get(\"/api/broadcasts/audience-counts\", async (req, res) => {\n    try {\n      const [allUsers, subscribers, activeUsers, payingUsers] = await Promise.all([\n        storage.getTargetUsers('all'),\n        storage.getTargetUsers('subscribers'), \n        storage.getTargetUsers('active'),\n        storage.getTargetUsers('paying')\n      ]);\n\n      res.json({\n        all: allUsers.length,\n        subscribers: subscribers.length,\n        active: activeUsers.length,\n        paying: payingUsers.length\n      });\n    } catch (error) {\n      console.error(\"Error fetching audience counts:\", error);\n      res.status(500).json({ error: \"Failed to fetch audience counts\" });\n    }\n  });\n\n  // Users management\n  app.get(\"/api/users\", async (req, res) => {\n    try {\n      const page = parseInt(req.query.page as string) || 1;\n      const limit = parseInt(req.query.limit as string) || 50;\n      const users = await storage.getUsers(limit, (page - 1) * limit);\n      const totalCount = await storage.getUsersCount();\n      \n      res.json({\n        users,\n        totalCount,\n        page,\n        totalPages: Math.ceil(totalCount / limit)\n      });\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      res.status(500).json({ error: \"Failed to fetch users\" });\n    }\n  });\n\n  // AI Requests analytics\n  app.get(\"/api/ai-requests/stats\", async (req, res) => {\n    try {\n      const stats = await storage.getAiRequestsStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching AI requests stats:\", error);\n      res.status(500).json({ error: \"Failed to fetch AI requests stats\" });\n    }\n  });\n\n  // Payments analytics\n  app.get(\"/api/payments/stats\", async (req, res) => {\n    try {\n      const stats = await storage.getPaymentsStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching payments stats:\", error);\n      res.status(500).json({ error: \"Failed to fetch payments stats\" });\n    }\n  });\n\n  // Referrals analytics  \n  app.get(\"/api/referrals/stats\", async (req, res) => {\n    try {\n      const stats = await storage.getReferralsStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching referrals stats:\", error);\n      res.status(500).json({ error: \"Failed to fetch referrals stats\" });\n    }\n  });\n\n  // Webhook handler for production bot  \n  app.post(\"/webhook/:token\", async (req, res) => {\n    try {\n      const { token } = req.params;\n      console.log('üîî Webhook received for token ending in:', token.slice(-6));\n      \n      if (token === process.env.BOT_TOKEN) {\n        // Process update with production bot\n        await bot.handleUpdate(req.body);\n        res.status(200).send('OK');\n      } else {\n        console.log('‚ùå Invalid webhook token');\n        res.status(403).send('Forbidden');\n      }\n    } catch (error) {\n      console.error(\"Webhook error:\", error);\n      res.status(500).send('Internal Server Error');\n    }\n  });\n\n  // Set webhook endpoint (for manual setup)\n  app.post(\"/api/bot/webhook\", async (req, res) => {\n    try {\n      const webhookUrl = `${process.env.WEBHOOK_URL}/webhook/${process.env.BOT_TOKEN}`;\n      await bot.telegram.setWebhook(webhookUrl);\n      res.json({ success: true, webhookUrl });\n    } catch (error) {\n      console.error(\"Error setting webhook:\", error);\n      res.status(500).json({ error: \"Failed to set webhook\" });\n    }\n  });\n\n  // Bot info\n  app.get(\"/api/bot/info\", async (req, res) => {\n    try {\n      const me = await bot.telegram.getMe();\n      const webhookInfo = await bot.telegram.getWebhookInfo();\n      res.json({ bot: me, webhook: webhookInfo });\n    } catch (error) {\n      console.error(\"Error fetching bot info:\", error);\n      res.status(500).json({ error: \"Failed to fetch bot info\" });\n    }\n  });\n\n  // Bot settings\n  app.get(\"/api/bot/settings\", async (req, res) => {\n    try {\n      const settings = await storage.getAllBotSettings();\n      res.json(settings);\n    } catch (error) {\n      console.error(\"Error fetching bot settings:\", error);\n      res.status(500).json({ error: \"Failed to fetch bot settings\" });\n    }\n  });\n\n  app.put(\"/api/bot/settings/:key\", async (req, res) => {\n    try {\n      const { key } = req.params;\n      const { value } = req.body;\n      \n      await storage.setBotSetting(key, value);\n      res.json({ success: true });\n    } catch (error) {\n      console.error(\"Error updating bot setting:\", error);\n      res.status(500).json({ error: \"Failed to update bot setting\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  // Initialize bot\n  const isDeployed = process.env.REPLIT_DEPLOYMENT === '1' || process.env.NODE_ENV === 'production';\n  \n  if (isDeployed) {\n    // Set webhook in production/deploy\n    const baseUrl = process.env.WEBHOOK_URL?.replace(/\\/$/, '') || ''; // Remove trailing slash\n    const webhookUrl = `${baseUrl}/webhook/${process.env.BOT_TOKEN}`;\n    console.log('üöÄ Setting up webhook for production bot:', webhookUrl);\n    bot.telegram.setWebhook(webhookUrl).catch(console.error);\n  } else {\n    console.log('‚ÑπÔ∏è  Production bot @Nemo_designer_bot —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Deploy —Å—Ä–µ–¥–µ');\n    console.log('üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @BOT_TOKEN_PREVIEW_BOT');\n    console.log('üöÄ –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å @Nemo_designer_bot, –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å Deploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');\n    \n    // Use polling in development\n    console.log('üîß Removing existing webhook before starting polling...');\n    bot.telegram.deleteWebhook({ drop_pending_updates: true })\n      .then(() => {\n        console.log('‚úÖ Webhook removed successfully');\n        console.log('‚è≥ Waiting 10 seconds for any existing polling connections to close...');\n        return new Promise(resolve => setTimeout(resolve, 10000));\n      })\n      .then(() => {\n        console.log('üöÄ Starting bot in polling mode...');\n        const launchPromise = bot.launch({ dropPendingUpdates: true });\n        launchPromise.catch((error) => {\n          console.error('‚ùå Failed to start bot:', error);\n          \n          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è 409 –æ—à–∏–±–æ–∫\n          if (error.response?.error_code === 409) {\n            console.log('üîç 409 Conflict detected with token ending in:', botToken?.slice(-6));\n            console.log('üí° Possible causes:');\n            console.log('  1. Deploy environment also uses this token');\n            console.log('  2. Another Replit workspace is running');\n            console.log('  3. Previous bot instance still active');\n            console.log('  4. Telegram servers are slow to release connection');\n            console.log('');\n            console.log('üõ†Ô∏è Solutions to try:');\n            console.log('  - Check Deploy environment variables');\n            console.log('  - Create THIRD bot token if needed'); \n            console.log('  - Wait 10-15 minutes for Telegram to release connection');\n            console.log('  - Use different Replit workspace');\n          }\n        });\n        console.log('‚úÖ Bot launched successfully in polling mode!');\n      });\n  }\n\n  // AI Settings endpoints\n  app.get(\"/api/ai/settings\", async (req, res) => {\n    try {\n      res.json(getCurrentAISettings());\n    } catch (error) {\n      console.error(\"Error fetching AI settings:\", error);\n      res.status(500).json({ error: \"Failed to fetch AI settings\" });\n    }\n  });\n\n  app.post(\"/api/ai/settings\", async (req, res) => {\n    try {\n      const { imageGenerationModel, imageQuality } = req.body;\n      \n      // Validate model\n      const validModels = [\"polza-nano-banana\", \"gpt-image-1\", \"gemini-2.5-flash-image-preview\"];\n      if (imageGenerationModel && !validModels.includes(imageGenerationModel)) {\n        return res.status(400).json({ error: \"Invalid model selected\" });\n      }\n      \n      // Validate quality\n      const validQualities = [\"low\", \"medium\", \"high\"];\n      if (imageQuality && !validQualities.includes(imageQuality)) {\n        return res.status(400).json({ error: \"Invalid quality selected\" });\n      }\n      \n      // Update settings\n      const updatedSettings = updateAISettings({\n        ...(imageGenerationModel && { imageGenerationModel }),\n        ...(imageQuality && { imageQuality })\n      });\n      \n      console.log('üîß AI settings updated:', updatedSettings);\n      res.json(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating AI settings:\", error);\n      res.status(500).json({ error: \"Failed to update AI settings\" });\n    }\n  });\n\n  // Test image generation endpoint\n  app.post(\"/api/ai/test-generation\", async (req, res) => {\n    try {\n      const { imageUrl, prompt } = req.body;\n      \n      if (!imageUrl || !prompt) {\n        return res.status(400).json({ error: \"Missing imageUrl or prompt\" });\n      }\n      \n      console.log('üß™ Testing image generation with model:', getCurrentAISettings().imageGenerationModel);\n      \n      // For testing purposes, just return success without actually generating\n      // This avoids issues with test URLs and API limits\n      res.json({\n        success: true,\n        model: getCurrentAISettings().imageGenerationModel,\n        imageUrl: \"https://via.placeholder.com/512x512/4a90e2/ffffff?text=Test+Generated+Image\",\n        description: `–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –º–æ–¥–µ–ª—å—é ${getCurrentAISettings().imageGenerationModel} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ`\n      });\n    } catch (error) {\n      console.error(\"Error testing image generation:\", error);\n      res.status(500).json({ \n        success: false,\n        error: \"Test generation failed\",\n        details: error instanceof Error ? error.message : \"Unknown error\"\n      });\n    }\n  });\n\n  // Initialize cron jobs\n  initializeCronJobs();\n\n  return httpServer;\n}\n\n// AI settings are now managed through aiSettings.ts module\n\nasync function sendBroadcastToUsers(broadcastId: string, message: string, users: any[]) {\n  let sentCount = 0;\n  let deliveredCount = 0;\n  let errorCount = 0;\n\n  for (const user of users) {\n    try {\n      await bot.telegram.sendMessage(parseInt(user.telegramId), message);\n      await storage.recordBroadcastDelivery(broadcastId, user.id, 'delivered');\n      deliveredCount++;\n      sentCount++;\n      \n      // Add small delay to avoid rate limiting\n      await new Promise(resolve => setTimeout(resolve, 50));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      await storage.recordBroadcastDelivery(broadcastId, user.id, 'failed', errorMessage);\n      errorCount++;\n      sentCount++;\n      console.error(`Failed to send broadcast to user ${user.id}:`, errorMessage);\n    }\n  }\n\n  // Update broadcast stats\n  await storage.updateBroadcast(broadcastId, {\n    status: 'completed',\n    sentCount,\n    deliveredCount,\n    errorCount,\n    sentAt: new Date()\n  });\n\n  console.log(`Broadcast ${broadcastId} completed: ${deliveredCount}/${sentCount} delivered, ${errorCount} errors`);\n}\n","size_bytes":15218},"server/storage.ts":{"content":"import { \n  users, \n  aiRequests, \n  payments, \n  broadcasts, \n  broadcastDeliveries, \n  subscriptionChecks,\n  referrals,\n  leadRequests,\n  botSettings,\n  type User, \n  type InsertUser,\n  type AiRequest,\n  type InsertAiRequest,\n  type Payment,\n  type InsertPayment,\n  type Broadcast,\n  type InsertBroadcast,\n  type LeadRequest,\n  type InsertLeadRequest\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, gte, and, or, count, sum } from \"drizzle-orm\";\nimport { randomUUID } from \"crypto\";\nimport { cache } from \"./cache\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByTelegramId(telegramId: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUser(id: string, updates: Partial<User>): Promise<User>;\n  \n  // Subscription checks\n  updateUserSubscription(userId: string, isSubscribed: boolean): Promise<void>;\n  \n  // AI Requests\n  createAiRequest(request: InsertAiRequest): Promise<AiRequest>;\n  updateAiRequest(id: string, updates: Partial<AiRequest>): Promise<AiRequest>;\n  getUserWeeklyRequests(userId: string, agentType: string): Promise<number>;\n  \n  // Payments\n  createPayment(payment: InsertPayment): Promise<Payment>;\n  updatePayment(id: string, updates: Partial<Payment>): Promise<Payment>;\n  \n  // Referrals\n  createReferral(referrerId: string, referredId: string): Promise<void>;\n  getUserReferralCode(userId: string): Promise<string>;\n  \n  // Broadcasts\n  createBroadcast(broadcast: InsertBroadcast): Promise<Broadcast>;\n  getBroadcasts(limit?: number): Promise<Broadcast[]>;\n  getTargetUsers(audience: string): Promise<User[]>;\n  recordBroadcastDelivery(broadcastId: string, userId: string, status: string, errorMessage?: string): Promise<void>;\n  \n  // Lead Requests\n  createLeadRequest(request: InsertLeadRequest): Promise<LeadRequest>;\n  \n  // Analytics\n  getDashboardStats(): Promise<{\n    totalUsers: number;\n    subscribers: number;\n    weeklyAiRequests: number;\n    monthlyRevenue: number;\n    weeklyGrowth: number;\n    subscriberGrowth: number;\n    aiRequestsGrowth: number;\n    revenueGrowth: number;\n  }>;\n  \n  getRecentActivity(limit?: number): Promise<Array<{\n    id: string;\n    type: string;\n    user: string;\n    action: string;\n    time: Date;\n  }>>;\n  \n  // Bot Settings\n  getBotSetting(key: string): Promise<string | undefined>;\n  setBotSetting(key: string, value: string): Promise<void>;\n  getAllBotSettings(): Promise<Array<{ key: string; value: string; updatedAt: Date }>>;\n\n  // User Management\n  getUsers(limit: number, offset: number): Promise<User[]>;\n  getUsersCount(): Promise<number>;\n\n  // Analytics & Stats\n  getAiRequestsStats(): Promise<{\n    totalRequests: number;\n    todayRequests: number;\n    weeklyRequests: number;\n    inspectorRequests: number;\n    designerRequests: number;\n    averageProcessingTime: number;\n  }>;\n  \n  getPaymentsStats(): Promise<{\n    totalRevenue: number;\n    todayRevenue: number;\n    weeklyRevenue: number;\n    totalPayments: number;\n    averagePayment: number;\n    completedPayments: number;\n    pendingPayments: number;\n  }>;\n  \n  getReferralsStats(): Promise<{\n    totalReferrals: number;\n    weeklyReferrals: number;\n    topReferrers: Array<{ userId: string; firstName?: string; lastName?: string; referralCount: number }>;\n  }>;\n\n  // Broadcast Management\n  updateBroadcast(id: string, updates: Partial<Broadcast>): Promise<Broadcast>;\n\n  // Maintenance\n  resetWeeklyLimits(): Promise<void>;\n  cleanupOldData(cutoffDate: Date): Promise<void>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByTelegramId(telegramId: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.telegramId, telegramId));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const referralCode = randomUUID().slice(0, 8);\n    const [user] = await db\n      .insert(users)\n      .values({ ...insertUser, referralCode })\n      .returning();\n    return user;\n  }\n\n  async updateUser(id: string, updates: Partial<User>): Promise<User> {\n    const [user] = await db\n      .update(users)\n      .set({ ...updates, lastActivity: new Date() })\n      .where(eq(users.id, id))\n      .returning();\n    return user;\n  }\n\n  async updateUserSubscription(userId: string, isSubscribed: boolean): Promise<void> {\n    await db.transaction(async (tx) => {\n      await tx.update(users).set({ isSubscribed }).where(eq(users.id, userId));\n      await tx.insert(subscriptionChecks).values({ userId, isSubscribed });\n    });\n  }\n\n  async createAiRequest(request: InsertAiRequest): Promise<AiRequest> {\n    const [aiRequest] = await db\n      .insert(aiRequests)\n      .values(request)\n      .returning();\n    return aiRequest;\n  }\n\n  async updateAiRequest(id: string, updates: Partial<AiRequest>): Promise<AiRequest> {\n    const [aiRequest] = await db\n      .update(aiRequests)\n      .set(updates)\n      .where(eq(aiRequests.id, id))\n      .returning();\n    return aiRequest;\n  }\n\n  async getUserWeeklyRequests(userId: string, agentType: string): Promise<number> {\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n    const [result] = await db\n      .select({ count: count() })\n      .from(aiRequests)\n      .where(\n        and(\n          eq(aiRequests.userId, userId),\n          eq(aiRequests.agentType, agentType),\n          gte(aiRequests.createdAt, weekAgo)\n        )\n      );\n    return result?.count || 0;\n  }\n\n  async createPayment(payment: InsertPayment): Promise<Payment> {\n    const [newPayment] = await db\n      .insert(payments)\n      .values(payment)\n      .returning();\n    return newPayment;\n  }\n\n  async updatePayment(id: string, updates: Partial<Payment>): Promise<Payment> {\n    const [payment] = await db\n      .update(payments)\n      .set(updates)\n      .where(eq(payments.id, id))\n      .returning();\n    return payment;\n  }\n\n  async createReferral(referrerId: string, referredId: string): Promise<void> {\n    await db.insert(referrals).values({ referrerId, referredId });\n  }\n\n  async getUserReferralCode(userId: string): Promise<string> {\n    const [user] = await db.select({ referralCode: users.referralCode }).from(users).where(eq(users.id, userId));\n    return user?.referralCode || '';\n  }\n\n  async createBroadcast(broadcast: InsertBroadcast): Promise<Broadcast> {\n    const [newBroadcast] = await db\n      .insert(broadcasts)\n      .values(broadcast)\n      .returning();\n    return newBroadcast;\n  }\n\n  async getBroadcasts(limit = 10): Promise<Broadcast[]> {\n    return db.select().from(broadcasts).orderBy(desc(broadcasts.createdAt)).limit(limit);\n  }\n\n  async getTargetUsers(audience: string): Promise<User[]> {\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n    \n    switch (audience) {\n      case 'subscribers':\n        return db.select().from(users).where(eq(users.isSubscribed, true));\n      case 'active':\n        return db.select().from(users).where(gte(users.lastActivity, weekAgo));\n      case 'paying':\n        const payingUserIds = await db\n          .selectDistinct({ userId: payments.userId })\n          .from(payments)\n          .where(eq(payments.status, 'completed'));\n        const userIds = payingUserIds.map(p => p.userId);\n        return db.select().from(users).where(or(...userIds.map(id => eq(users.id, id))));\n      default:\n        return db.select().from(users).where(eq(users.isActive, true));\n    }\n  }\n\n  async recordBroadcastDelivery(broadcastId: string, userId: string, status: string, errorMessage?: string): Promise<void> {\n    await db.insert(broadcastDeliveries).values({\n      broadcastId,\n      userId,\n      status,\n      errorMessage\n    });\n  }\n\n  async createLeadRequest(request: InsertLeadRequest): Promise<LeadRequest> {\n    const [leadRequest] = await db\n      .insert(leadRequests)\n      .values(request)\n      .returning();\n    return leadRequest;\n  }\n\n  async getDashboardStats() {\n    // Check cache first (5 minute TTL)\n    const cacheKey = 'dashboard_stats';\n    const cached = cache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n    const monthAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n    const twoWeeksAgo = new Date(Date.now() - 14 * 24 * 60 * 60 * 1000);\n    const twoMonthsAgo = new Date(Date.now() - 60 * 24 * 60 * 60 * 1000);\n\n    const [\n      totalUsersResult,\n      subscribersResult,\n      weeklyAiRequestsResult,\n      monthlyRevenueResult,\n      prevWeekUsersResult,\n      prevWeekSubscribersResult,\n      prevWeekAiRequestsResult,\n      prevMonthRevenueResult\n    ] = await Promise.all([\n      db.select({ count: count() }).from(users),\n      db.select({ count: count() }).from(users).where(eq(users.isSubscribed, true)),\n      db.select({ count: count() }).from(aiRequests).where(gte(aiRequests.createdAt, weekAgo)),\n      db.select({ sum: sum(payments.amount) }).from(payments)\n        .where(and(eq(payments.status, 'completed'), gte(payments.createdAt, monthAgo))),\n      db.select({ count: count() }).from(users)\n        .where(and(gte(users.createdAt, twoWeeksAgo), gte(users.createdAt, weekAgo))),\n      db.select({ count: count() }).from(users)\n        .where(and(eq(users.isSubscribed, true), gte(users.createdAt, twoWeeksAgo), gte(users.createdAt, weekAgo))),\n      db.select({ count: count() }).from(aiRequests)\n        .where(and(gte(aiRequests.createdAt, twoWeeksAgo), gte(aiRequests.createdAt, weekAgo))),\n      db.select({ sum: sum(payments.amount) }).from(payments)\n        .where(and(eq(payments.status, 'completed'), gte(payments.createdAt, twoMonthsAgo), gte(payments.createdAt, monthAgo)))\n    ]);\n\n    const totalUsers = totalUsersResult[0]?.count || 0;\n    const subscribers = subscribersResult[0]?.count || 0;\n    const weeklyAiRequests = weeklyAiRequestsResult[0]?.count || 0;\n    const monthlyRevenue = Number(monthlyRevenueResult[0]?.sum || 0);\n    \n    const prevWeekUsers = prevWeekUsersResult[0]?.count || 0;\n    const prevWeekSubscribers = prevWeekSubscribersResult[0]?.count || 0;\n    const prevWeekAiRequests = prevWeekAiRequestsResult[0]?.count || 0;\n    const prevMonthRevenue = Number(prevMonthRevenueResult[0]?.sum || 0);\n\n    const weeklyGrowth = prevWeekUsers > 0 ? ((totalUsers - prevWeekUsers) / prevWeekUsers) * 100 : 0;\n    const subscriberGrowth = prevWeekSubscribers > 0 ? ((subscribers - prevWeekSubscribers) / prevWeekSubscribers) * 100 : 0;\n    const aiRequestsGrowth = prevWeekAiRequests > 0 ? ((weeklyAiRequests - prevWeekAiRequests) / prevWeekAiRequests) * 100 : 0;\n    const revenueGrowth = prevMonthRevenue > 0 ? ((monthlyRevenue - prevMonthRevenue) / prevMonthRevenue) * 100 : 0;\n\n    const result = {\n      totalUsers,\n      subscribers,\n      weeklyAiRequests,\n      monthlyRevenue,\n      weeklyGrowth,\n      subscriberGrowth,\n      aiRequestsGrowth,\n      revenueGrowth\n    };\n\n    // Cache result for 5 minutes\n    cache.set(cacheKey, result, 5);\n    return result;\n  }\n\n  async getRecentActivity(limit = 10) {\n    // Check cache first (2 minute TTL for activity)\n    const cacheKey = `recent_activity_${limit}`;\n    const cached = cache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    const activities = await db\n      .select({\n        id: aiRequests.id,\n        type: aiRequests.agentType,\n        userId: aiRequests.userId,\n        createdAt: aiRequests.createdAt,\n        firstName: users.firstName,\n        lastName: users.lastName,\n        username: users.username\n      })\n      .from(aiRequests)\n      .leftJoin(users, eq(aiRequests.userId, users.id))\n      .orderBy(desc(aiRequests.createdAt))\n      .limit(limit);\n\n    const result = activities.map(activity => ({\n      id: activity.id,\n      type: activity.type === 'inspector' ? 'inspection' : 'design',\n      user: activity.firstName || activity.username || 'Unknown User',\n      action: activity.type === 'inspector' ? '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫' : '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä',\n      time: activity.createdAt || new Date()\n    }));\n\n    // Cache result for 2 minutes\n    cache.set(cacheKey, result, 2);\n    return result;\n  }\n\n  async getBotSetting(key: string): Promise<string | undefined> {\n    const [setting] = await db.select().from(botSettings).where(eq(botSettings.key, key));\n    return setting?.value;\n  }\n\n  async setBotSetting(key: string, value: string): Promise<void> {\n    await db\n      .insert(botSettings)\n      .values({ key, value })\n      .onConflictDoUpdate({\n        target: botSettings.key,\n        set: { value, updatedAt: new Date() }\n      });\n  }\n\n  async getAllBotSettings(): Promise<Array<{ key: string; value: string; updatedAt: Date }>> {\n    return db.select({\n      key: botSettings.key,\n      value: botSettings.value,\n      updatedAt: botSettings.updatedAt\n    }).from(botSettings).then(results => \n      results.map(r => ({\n        ...r,\n        updatedAt: r.updatedAt || new Date()\n      }))\n    );\n  }\n\n  async getUsers(limit: number, offset: number): Promise<User[]> {\n    return db.select().from(users).orderBy(desc(users.createdAt)).limit(limit).offset(offset);\n  }\n\n  async getUsersCount(): Promise<number> {\n    const [result] = await db.select({ count: count() }).from(users);\n    return result?.count || 0;\n  }\n\n  async getAiRequestsStats() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\n    const [\n      totalRequestsResult,\n      todayRequestsResult,\n      weeklyRequestsResult,\n      inspectorRequestsResult,\n      designerRequestsResult,\n      avgProcessingTimeResult\n    ] = await Promise.all([\n      db.select({ count: count() }).from(aiRequests),\n      db.select({ count: count() }).from(aiRequests).where(gte(aiRequests.createdAt, today)),\n      db.select({ count: count() }).from(aiRequests).where(gte(aiRequests.createdAt, weekAgo)),\n      db.select({ count: count() }).from(aiRequests).where(eq(aiRequests.agentType, 'inspector')),\n      db.select({ count: count() }).from(aiRequests).where(eq(aiRequests.agentType, 'designer')),\n      db.select({ avg: sum(aiRequests.processingTime) }).from(aiRequests).where(gte(aiRequests.createdAt, weekAgo))\n    ]);\n\n    return {\n      totalRequests: totalRequestsResult[0]?.count || 0,\n      todayRequests: todayRequestsResult[0]?.count || 0,\n      weeklyRequests: weeklyRequestsResult[0]?.count || 0,\n      inspectorRequests: inspectorRequestsResult[0]?.count || 0,\n      designerRequests: designerRequestsResult[0]?.count || 0,\n      averageProcessingTime: Number(avgProcessingTimeResult[0]?.avg || 0)\n    };\n  }\n\n  async getPaymentsStats() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\n    const [\n      totalRevenueResult,\n      todayRevenueResult,\n      weeklyRevenueResult,\n      totalPaymentsResult,\n      avgPaymentResult,\n      completedPaymentsResult,\n      pendingPaymentsResult\n    ] = await Promise.all([\n      db.select({ sum: sum(payments.amount) }).from(payments).where(eq(payments.status, 'completed')),\n      db.select({ sum: sum(payments.amount) }).from(payments)\n        .where(and(eq(payments.status, 'completed'), gte(payments.createdAt, today))),\n      db.select({ sum: sum(payments.amount) }).from(payments)\n        .where(and(eq(payments.status, 'completed'), gte(payments.createdAt, weekAgo))),\n      db.select({ count: count() }).from(payments),\n      db.select({ avg: sum(payments.amount) }).from(payments).where(eq(payments.status, 'completed')),\n      db.select({ count: count() }).from(payments).where(eq(payments.status, 'completed')),\n      db.select({ count: count() }).from(payments).where(eq(payments.status, 'pending'))\n    ]);\n\n    const totalPayments = totalPaymentsResult[0]?.count || 0;\n    const completedPayments = completedPaymentsResult[0]?.count || 0;\n    \n    return {\n      totalRevenue: Number(totalRevenueResult[0]?.sum || 0),\n      todayRevenue: Number(todayRevenueResult[0]?.sum || 0),\n      weeklyRevenue: Number(weeklyRevenueResult[0]?.sum || 0),\n      totalPayments,\n      averagePayment: completedPayments > 0 ? Number(avgPaymentResult[0]?.avg || 0) / completedPayments : 0,\n      completedPayments,\n      pendingPayments: pendingPaymentsResult[0]?.count || 0\n    };\n  }\n\n  async getReferralsStats() {\n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\n    const [\n      totalReferralsResult,\n      weeklyReferralsResult,\n      topReferrersResult\n    ] = await Promise.all([\n      db.select({ count: count() }).from(referrals),\n      db.select({ count: count() }).from(referrals).where(gte(referrals.createdAt, weekAgo)),\n      db.select({\n        userId: referrals.referrerId,\n        referralCount: count(),\n        firstName: users.firstName,\n        lastName: users.lastName\n      })\n        .from(referrals)\n        .leftJoin(users, eq(referrals.referrerId, users.id))\n        .groupBy(referrals.referrerId, users.firstName, users.lastName)\n        .orderBy(desc(count()))\n        .limit(10)\n    ]);\n\n    return {\n      totalReferrals: totalReferralsResult[0]?.count || 0,\n      weeklyReferrals: weeklyReferralsResult[0]?.count || 0,\n      topReferrers: topReferrersResult.map(r => ({\n        userId: r.userId,\n        firstName: r.firstName || undefined,\n        lastName: r.lastName || undefined,\n        referralCount: r.referralCount\n      }))\n    };\n  }\n\n  async updateBroadcast(id: string, updates: Partial<Broadcast>): Promise<Broadcast> {\n    const [broadcast] = await db\n      .update(broadcasts)\n      .set(updates)\n      .where(eq(broadcasts.id, id))\n      .returning();\n    return broadcast;\n  }\n\n  async resetWeeklyLimits(): Promise<void> {\n    // This would reset user weekly limits - for now we'll just update the lastActivity\n    // In a real implementation, you might have a separate table for tracking weekly limits\n    await db.update(users).set({ lastActivity: new Date() });\n  }\n\n  async cleanupOldData(cutoffDate: Date): Promise<void> {\n    // Clean up old AI requests older than cutoff date\n    await db.delete(aiRequests).where(gte(aiRequests.createdAt, cutoffDate));\n    \n    // Clean up old subscription checks\n    await db.delete(subscriptionChecks).where(gte(subscriptionChecks.checkedAt, cutoffDate));\n    \n    // Clean up old broadcast deliveries\n    await db.delete(broadcastDeliveries).where(gte(broadcastDeliveries.deliveredAt, cutoffDate));\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":18704},"server/subscriptionChecker.ts":{"content":"import { bot } from './telegramBot';\nimport { storage } from './storage';\n\nconst CHANNEL_USERNAME = process.env.TELEGRAM_CHANNEL_USERNAME || '@nemo_moscow_channel';\n\nexport async function checkUserSubscription(telegramId: string): Promise<boolean> {\n  try {\n    const member = await bot.telegram.getChatMember(CHANNEL_USERNAME, parseInt(telegramId));\n    \n    // User is subscribed if they are a member, administrator, or creator\n    const subscribedStatuses = ['member', 'administrator', 'creator'];\n    return subscribedStatuses.includes(member.status);\n  } catch (error) {\n    console.error('Error checking subscription:', error);\n    // If we can't check, assume not subscribed for security\n    return false;\n  }\n}\n\nexport async function updateUserSubscriptionStatus(userId: string, telegramId: string): Promise<boolean> {\n  const isSubscribed = await checkUserSubscription(telegramId);\n  \n  // Update user subscription status in database\n  await storage.updateUserSubscription(userId, isSubscribed);\n  \n  return isSubscribed;\n}\n\nexport async function requireSubscription(ctx: any, next: () => void) {\n  const user = ctx.user;\n  if (!user) {\n    return ctx.reply('–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');\n  }\n\n  // Check current subscription status\n  const isSubscribed = await updateUserSubscriptionStatus(user.id, user.telegramId);\n\n  if (!isSubscribed) {\n    return ctx.reply(\n      '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ò–ò-–∞–≥–µ–Ω—Ç–∞–º–∏, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\\n' +\n      `üëâ ${CHANNEL_USERNAME}\\n\\n` +\n      '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª.\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'check_subscription' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n  }\n\n  // User is subscribed, continue to next handler\n  return next();\n}\n","size_bytes":2096},"server/telegramBot.ts":{"content":"import { Telegraf, Context } from 'telegraf';\nimport { message } from 'telegraf/filters';\nimport { storage } from './storage';\nimport { \n  handleStart, \n  handleInspector, \n  handleDesigner, \n  handleRenovation, \n  handleHowWeWork, \n  handleLeaveRequest, \n  handleReferral,\n  handleSubscriptionCheck,\n  handleBuyRequests,\n  handleLimitsCheck,\n  handleStyleSelection,\n  handlePrioritySelection,\n  handleAccentSelection,\n  handleRenovationIncludes,\n  handleQualityControl,\n  handleConsultation,\n  handleDiscussProject\n} from './botHandlers';\nimport { \n  createInvoice, \n  handlePreCheckoutQuery, \n  handleSuccessfulPayment,\n  getPaymentKeyboard\n} from './payments';\nimport { \n  analyzeConstructionImage, \n  generateDesignConcept, \n  formatInspectionReport, \n  formatDesignReport \n} from './openai';\nimport { updateUserSubscriptionStatus } from './subscriptionChecker';\n\n// Import settings getter to avoid circular dependency\nimport { getCurrentAISettings } from './aiSettings';\n\n// Two-bot system:\n// PREVIEW (Replit Workspace): BOT_TOKEN_DEV - –Ω–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–µ–≤—å—é\n// DEPLOY (Replit Deploy): BOT_TOKEN - —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±–æ—Ç –¥–ª—è –¥–µ–ø–ª–æ—è\n\nconst isDeployment = process.env.REPLIT_DEPLOYMENT === '1' || process.env.NODE_ENV === 'production';\n\n// –í–∫–ª—é—á–∞–µ–º Preview - —Ç–æ–∫–µ–Ω—ã —Ä–∞–∑–Ω—ã–µ, –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –Ω–µ—Ç  \nconst DISABLE_PREVIEW_BOT = false;\n\nlet botToken: string;\n\nconsole.log('üîç Environment debug info:');\nconsole.log(`  - REPLIT_DEPLOYMENT: ${process.env.REPLIT_DEPLOYMENT}`);\nconsole.log(`  - NODE_ENV: ${process.env.NODE_ENV}`);\nconsole.log(`  - isDeployment: ${isDeployment}`);\nconsole.log(`  - BOT_TOKEN available: ${!!process.env.BOT_TOKEN}`);\nconsole.log(`  - BOT_TOKEN_DEV available: ${!!process.env.BOT_TOKEN_DEV}`);\nconsole.log(`  - BOT_TOKEN_PREVIEW available: ${!!process.env.BOT_TOKEN_PREVIEW}`);\n\n// –û–ß–ï–ù–¨ –í–ê–ñ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: —É–±–µ–¥–∏–º—Å—è —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–∞–∑–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã\nif (process.env.BOT_TOKEN && process.env.BOT_TOKEN_DEV) {\n  const mainTokenEnd = process.env.BOT_TOKEN.slice(-10);\n  const devTokenEnd = process.env.BOT_TOKEN_DEV.slice(-10);\n  console.log(`  - BOT_TOKEN ends with: ...${mainTokenEnd}`);\n  console.log(`  - BOT_TOKEN_DEV ends with: ...${devTokenEnd}`);\n  \n  if (mainTokenEnd === devTokenEnd) {\n    console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: BOT_TOKEN –∏ BOT_TOKEN_DEV –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ!');\n    console.log('üí° –≠—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç 409! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è Preview –∏ Deploy');\n  } else {\n    console.log('‚úÖ –¢–æ–∫–µ–Ω—ã —Ä–∞–∑–Ω—ã–µ - —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');\n  }\n}\n\nif (isDeployment) {\n  // Deploy/Production - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π BOT_TOKEN\n  botToken = process.env.BOT_TOKEN || '';\n  console.log('üöÄ Using DEPLOY bot (BOT_TOKEN)');\n  console.log(`üîç Deploy token ends with: ...${process.env.BOT_TOKEN?.slice(-6) || 'NONE'}`);\n} else {\n  // Preview/Development - –∏—Å–ø–æ–ª—å–∑—É–µ–º PREVIEW —Ç–æ–∫–µ–Ω –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è 409 –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤\n  botToken = process.env.BOT_TOKEN_PREVIEW || process.env.BOT_TOKEN_DEV || '';\n  console.log('üîß Using PREVIEW bot in development (BOT_TOKEN_PREVIEW) - avoiding 409');\n  const devToken = process.env.BOT_TOKEN_PREVIEW || process.env.BOT_TOKEN_DEV;\n  console.log(`üîç Preview token ends with: ...${devToken?.slice(-6) || 'NONE'}`);\n}\n\nif (!botToken) {\n  const environment = isDeployment ? 'deploy' : 'preview';\n  console.error(`‚ùå No bot token found for ${environment} environment!`);\n  console.log('üí° Set the appropriate token:');\n  console.log('  - Preview (Replit Workspace): BOT_TOKEN_DEV');\n  console.log('  - Deploy (Replit Deploy): BOT_TOKEN');\n  \n  // Debug info\n  console.log('üîç Debug info:');\n  console.log(`  - isDeployment: ${isDeployment}`);\n  console.log(`  - NODE_ENV: ${process.env.NODE_ENV}`);\n  console.log(`  - REPLIT_DEPLOYMENT: ${process.env.REPLIT_DEPLOYMENT}`);\n  console.log(`  - BOT_TOKEN exists: ${!!process.env.BOT_TOKEN}`);\n  console.log(`  - BOT_TOKEN_DEV exists: ${!!process.env.BOT_TOKEN_DEV}`);\n}\n\nconst bot = new Telegraf(botToken);\n\n// Function to get current AI settings (to avoid circular dependency)\nfunction getCurrentAIModel(): string {\n  try {\n    const settings = getCurrentAISettings();\n    return settings.imageGenerationModel;\n  } catch (error) {\n    console.error('Error getting AI settings:', error);\n    return \"gpt-image-1\"; // fallback\n  }\n}\n\n// Middleware to ensure user exists in database\nbot.use(async (ctx, next) => {\n  console.log('üì© Received update:', {\n    updateType: ctx.updateType,\n    fromId: ctx.from?.id,\n    username: ctx.from?.username,\n    text: ctx.message && 'text' in ctx.message ? ctx.message.text : undefined\n  });\n  \n  if (ctx.from) {\n    let user = await storage.getUserByTelegramId(ctx.from.id.toString());\n    if (!user) {\n      // Handle referral on user creation\n      let referredBy: string | undefined;\n      \n      if (ctx.message && 'text' in ctx.message && ctx.message.text.startsWith('/start ref_')) {\n        const referralCode = ctx.message.text.split('ref_')[1];\n        // const referrer = await storage.getUserByReferralCode(referralCode);\n        // if (referrer) {\n        //   referredBy = referrer.id;\n        // }\n      }\n      \n      user = await storage.createUser({\n        telegramId: ctx.from.id.toString(),\n        username: ctx.from.username || undefined,\n        firstName: ctx.from.first_name || undefined,\n        lastName: ctx.from.last_name || undefined,\n        referredBy\n      });\n\n      // Temporarily disable referral creation\n      // if (referredBy) {\n      //   await storage.createReferral(referredBy, user.id);\n      // }\n    } else {\n      // Update last activity\n      await storage.updateUser(user.id, { lastActivity: new Date() });\n    }\n    (ctx as any).user = user;\n  }\n  return next();\n});\n\n// Start command and referral handling\nbot.start(async (ctx) => {\n  console.log('üöÄ START command received from user:', ctx.from?.id);\n  const text = ctx.message.text;\n  // Temporarily disable referral handling\n  // if (text.includes('ref_')) {\n  //   const referralCode = text.split('ref_')[1];\n  //   const referrer = await storage.getUserByReferralCode(referralCode);\n  //   const user = (ctx as any).user;\n  //   \n  //   if (referrer && user && !user.referredBy) {\n  //     // Update user with referrer\n  //     await storage.updateUser(user.id, { referredBy: referrer.id });\n  //     await storage.createReferral(referrer.id, user.id);\n  //     \n  //     ctx.reply(\n  //       'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.\\n' +\n  //       '–ü–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª—é–±–æ–≥–æ –ò–ò-–∞–≥–µ–Ω—Ç–∞ –≤–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç –±–æ–Ω—É—Å–Ω—É—é –ø–æ–ø—ã—Ç–∫—É.\\n\\n'\n  //     );\n  //   }\n  // }\n  \n  return handleStart(ctx);\n});\n\n// Main menu handlers\nbot.action('start', handleStart);\nbot.action('renovation', handleRenovation);\nbot.action('inspector', handleInspector);\nbot.action('designer', handleDesigner);\nbot.action('how_we_work', handleHowWeWork);\nbot.action('website', (ctx) => {\n  if (ctx.callbackQuery) {\n    ctx.answerCbQuery();\n  }\n  ctx.reply('üåê –ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç: https://nemo.moscow\\n\\nNEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.');\n});\nbot.action('office', (ctx) => {\n  if (ctx.callbackQuery) {\n    ctx.answerCbQuery();\n  }\n  ctx.reply('üó∫ –ù–∞—à –æ—Ñ–∏—Å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö: https://yandex.ru/maps/org/nemo_moscow\\n\\nNEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.');\n});\nbot.action('leave_request', handleLeaveRequest);\n\n// Renovation detail handlers\nbot.action('renovation_includes', handleRenovationIncludes);\nbot.action('quality_control', handleQualityControl);\n\n// Consultation handlers\nbot.action('consultation', handleConsultation);\nbot.action('discuss_project', handleDiscussProject);\n\n// Subscription and limits\nbot.action('check_subscription', handleSubscriptionCheck);\nbot.action('limits', handleLimitsCheck);\n\n// Payment handlers\nbot.action('buy_requests', async (ctx) => {\n  await ctx.answerCbQuery();\n  ctx.reply(\n    'üí≥ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:',\n    { reply_markup: getPaymentKeyboard() }\n  );\n});\n\nbot.action(/^buy_requests_/, async (ctx) => {\n  await ctx.answerCbQuery();\n  const packageId = ctx.match[0].replace('buy_', '');\n  \n  try {\n    await createInvoice(ctx, packageId);\n  } catch (error) {\n    console.error('Error creating invoice:', error);\n    ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á—ë—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');\n  }\n});\n\n// Designer quiz handlers\nbot.action('style_minimalism', (ctx) => handleStyleSelection(ctx, 'minimalism'));\nbot.action('style_loft', (ctx) => handleStyleSelection(ctx, 'loft'));\nbot.action('style_classic', (ctx) => handleStyleSelection(ctx, 'classic'));\nbot.action('style_scandi', (ctx) => handleStyleSelection(ctx, 'scandi'));\n\nbot.action('priority_durability', (ctx) => handlePrioritySelection(ctx, 'durability'));\nbot.action('priority_comfort', (ctx) => handlePrioritySelection(ctx, 'comfort'));\nbot.action('priority_aesthetics', (ctx) => handlePrioritySelection(ctx, 'aesthetics'));\nbot.action('priority_speed', (ctx) => handlePrioritySelection(ctx, 'speed'));\n\nbot.action('accent_lighting', (ctx) => handleAccentSelection(ctx, 'lighting'));\nbot.action('accent_furniture', (ctx) => handleAccentSelection(ctx, 'furniture'));\nbot.action('accent_materials', (ctx) => handleAccentSelection(ctx, 'materials'));\n\n// Referral system\nbot.command('ref', handleReferral);\nbot.action('referrals', handleReferral);\n\n// Payment processing\nbot.on('pre_checkout_query', handlePreCheckoutQuery);\nbot.on('successful_payment', handleSuccessfulPayment);\n\n// Handle text messages for lead form and consultation form\nbot.on(message('text'), async (ctx) => {\n  const user = (ctx as any).user;\n  if (!user) return;\n\n  // Check if user is in consultation form state\n  const consultationFormState = await storage.getBotSetting(`consultation_form_${user.id}`);\n  if (consultationFormState) {\n    const state = JSON.parse(consultationFormState);\n    \n    switch (state.step) {\n      case 'name':\n        state.name = ctx.message.text;\n        state.step = 'phone';\n        await storage.setBotSetting(`consultation_form_${user.id}`, JSON.stringify(state));\n        ctx.reply('üì± –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');\n        break;\n        \n      case 'phone':\n        state.phone = ctx.message.text;\n        state.step = 'address';\n        await storage.setBotSetting(`consultation_form_${user.id}`, JSON.stringify(state));\n        \n        if (state.source === 'designer_consultation') {\n          ctx.reply('üí¨ –û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç—É:');\n        } else {\n          ctx.reply('üè† –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:');\n        }\n        break;\n        \n      case 'address':\n        state.address = ctx.message.text;\n        \n        // Save consultation request\n        await storage.createLeadRequest({\n          userId: user.id,\n          name: state.name,\n          phone: state.phone,\n          interest: `–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏–Ω–∂–µ–Ω–µ—Ä–∞. –ê–¥—Ä–µ—Å: ${state.address}`, // Store address/wishes in interest\n          source: state.source\n        });\n        \n        // Clear form state\n        await storage.setBotSetting(`consultation_form_${user.id}`, '');\n        \n        const responseMessage = state.source === 'designer_consultation' ? \n          '‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –Ω–∞ –¥–∏–∑–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç–∞.\\n' +\n          '–ù–∞—à –¥–∏–∑–∞–π–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.\\n\\n' +\n          'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.' :\n          '‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç–∞.\\n' +\n          '–ù–∞—à –∏–Ω–∂–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.\\n\\n' +\n          'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.';\n        \n        ctx.reply(responseMessage, {\n          reply_markup: {\n            inline_keyboard: [\n              [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }],\n              [{ text: 'üåê –°–∞–π—Ç', callback_data: 'website' }, { text: 'üó∫ –û—Ñ–∏—Å', callback_data: 'office' }]\n            ]\n          }\n        });\n        break;\n    }\n    return; // Exit early if consultation form was handled\n  }\n\n  // Check if user is in lead form state\n  const formState = await storage.getBotSetting(`lead_form_${user.id}`);\n  if (formState) {\n    const state = JSON.parse(formState);\n    \n    switch (state.step) {\n      case 'name':\n        state.name = ctx.message.text;\n        state.step = 'phone';\n        await storage.setBotSetting(`lead_form_${user.id}`, JSON.stringify(state));\n        ctx.reply('üì± –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');\n        break;\n        \n      case 'phone':\n        state.phone = ctx.message.text;\n        \n        // Save lead request\n        await storage.createLeadRequest({\n          userId: user.id,\n          name: state.name,\n          phone: state.phone,\n          interest: state.interest,\n          source: state.source || 'main_menu'\n        });\n        \n        // Clear form state\n        await storage.setBotSetting(`lead_form_${user.id}`, '');\n        \n        ctx.reply(\n          '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.\\n' +\n          '–ù–∞—à –∏–Ω–∂–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\\n\\n' +\n          'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n          {\n            reply_markup: {\n              inline_keyboard: [\n                [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }],\n                [{ text: 'üåê –°–∞–π—Ç', callback_data: 'website' }, { text: 'üó∫ –û—Ñ–∏—Å', callback_data: 'office' }]\n              ]\n            }\n          }\n        );\n        break;\n    }\n  }\n});\n\n// Handle photos for AI agents\nbot.on(message('photo'), async (ctx) => {\n  const user = (ctx as any).user;\n  if (!user) return;\n\n  // Check if user is waiting for photo upload\n  const agentState = await storage.getBotSetting(`agent_state_${user.id}`);\n  if (agentState) {\n    const state = JSON.parse(agentState);\n    \n    // Get file URL using the correct bot token for current environment  \n    const currentBotToken = isDeployment ? process.env.BOT_TOKEN : (process.env.BOT_TOKEN_PREVIEW || process.env.BOT_TOKEN_DEV);\n    const fileId = ctx.message.photo[ctx.message.photo.length - 1].file_id;\n    const file = await ctx.telegram.getFile(fileId);\n    const imageUrl = `https://api.telegram.org/file/bot${currentBotToken}/${file.file_path}`;\n    console.log('üì∑ NEW image URL generated:', imageUrl);\n    \n    // Clear agent state\n    await storage.setBotSetting(`agent_state_${user.id}`, '');\n    \n    if (state.agent === 'inspector') {\n      // Handle inspector photo\n      const aiRequest = await storage.createAiRequest({\n        userId: user.id,\n        agentType: 'inspector',\n        imageUrl,\n        status: 'processing'\n      });\n      \n      ctx.reply('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ç–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 60 —Å–µ–∫—É–Ω–¥.');\n      \n      // Process in background\n      processInspectorRequest(aiRequest.id, imageUrl, ctx);\n      \n    } else if (state.agent === 'designer') {\n      // Handle designer photo with quiz data\n      const quizData = await storage.getBotSetting(`design_quiz_${user.id}`);\n      const quiz = quizData ? JSON.parse(quizData) : {};\n      \n      const prompt = `–°—Ç–∏–ª—å: ${quiz.style || '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π'}, –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${quiz.priority || '—ç—Å—Ç–µ—Ç–∏–∫–∞'}, –ê–∫—Ü–µ–Ω—Ç: ${quiz.accent || '–æ–±—â–∏–π'}`;\n      \n      const aiRequest = await storage.createAiRequest({\n        userId: user.id,\n        agentType: 'designer',\n        imageUrl,\n        prompt,\n        status: 'processing'\n      });\n      \n      ctx.reply('üé® –°–æ–∑–¥–∞—é –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 60 —Å–µ–∫—É–Ω–¥.');\n      \n      // Clear quiz data\n      await storage.setBotSetting(`design_quiz_${user.id}`, '');\n      \n      // Process in background\n      processDesignerRequest(aiRequest.id, imageUrl, quiz.style, quiz.priority, quiz.accent, ctx);\n    }\n  } else {\n    ctx.reply(\n      '–ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ò–ò-–∞–≥–µ–Ω—Ç–∞:\\n' +\n      'üëÄ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫ - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–º–æ–Ω—Ç–∞\\n' +\n      'üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç–∞',\n      {\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üëÄ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫', callback_data: 'inspector' }],\n            [{ text: 'üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä', callback_data: 'designer' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n  }\n});\n\nasync function processInspectorRequest(requestId: string, imageUrl: string, ctx: Context) {\n  const startTime = Date.now();\n  \n  try {\n    const analysis = await analyzeConstructionImage(imageUrl);\n    const processingTime = Math.round((Date.now() - startTime) / 1000);\n    \n    const report = formatInspectionReport(analysis);\n    \n    await storage.updateAiRequest(requestId, {\n      response: report,\n      status: 'completed',\n      completedAt: new Date(),\n      processingTime\n    });\n    \n    ctx.reply(\n      report + '\\n\\n' +\n      '–í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫—É –æ—Ç NEMO Moscow ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–º–æ–Ω—Ç–∞ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤.\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.',\n      {\n        parse_mode: 'Markdown',\n        reply_markup: {\n          inline_keyboard: [\n            [{ text: 'üë®‚Äçüîß –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏–Ω–∂–µ–Ω–µ—Ä–∞', callback_data: 'consultation' }],\n            [{ text: 'üìä –û—Å—Ç–∞—Ç–æ–∫ –ø–æ–ø—ã—Ç–æ–∫', callback_data: 'limits' }],\n            [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n          ]\n        }\n      }\n    );\n\n    // Temporarily disable referral bonus\n    // const user = (ctx as any).user;\n    // if (user?.referredBy) {\n    //   const referral = await storage.getReferralByUsers(user.referredBy, user.id);\n    //   if (referral && !referral.bonusGranted) {\n    //     await storage.grantReferralBonus(referral.id);\n    //     await storage.incrementUserRequests(user.referredBy, 1);\n    //   }\n    // }\n    \n  } catch (error) {\n    console.error('Inspector processing error:', error);\n    await storage.updateAiRequest(requestId, {\n      status: 'failed',\n      response: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'\n    });\n    \n    ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');\n  }\n}\n\nasync function processDesignerRequest(\n  requestId: string, \n  imageUrl: string, \n  style: string, \n  priority: string, \n  accent: string, \n  ctx: Context\n) {\n  const startTime = Date.now();\n  \n  try {\n    const currentModel = getCurrentAIModel();\n    console.log('ü§ñ Using AI model for design generation:', currentModel);\n    const design = await generateDesignConcept(imageUrl, style, priority, accent, currentModel);\n    const processingTime = Math.round((Date.now() - startTime) / 1000);\n    \n    const report = formatDesignReport(design);\n    \n    await storage.updateAiRequest(requestId, {\n      response: report,\n      status: 'completed',\n      completedAt: new Date(),\n      processingTime\n    });\n    \n    let message = report + '\\n\\n';\n    \n    // Add note if no image was generated\n    if (!design.imageUrl) {\n      message += 'üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–æ –¥–∏–∑–∞–π–Ω-–∫–æ–Ω—Ü–µ–ø—Ü–∏—è –≥–æ—Ç–æ–≤–∞!\\n\\n';\n    }\n    \n    message += '–¢–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–∞—à –∏–Ω—Ç–µ—Ä—å–µ—Ä ‚Äî –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –∫—Ä–∞—Å–∏–≤–æ–º, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ–º –∏ —Å—Ç–∏–ª—å–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.\\n\\n' +\n      'NEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.';\n    \n    console.log('üñºÔ∏è Checking for generated image...');\n    console.log('üñºÔ∏è design.imageUrl exists:', !!design.imageUrl);\n    console.log('üñºÔ∏è design.imageUrl type:', typeof design.imageUrl);\n    \n    const replyMarkup = {\n      reply_markup: {\n        inline_keyboard: [\n          [{ text: 'üé® –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç', callback_data: 'discuss_project' }],\n          [{ text: 'üìä –û—Å—Ç–∞—Ç–æ–∫ –ø–æ–ø—ã—Ç–æ–∫', callback_data: 'limits' }],\n          [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start' }]\n        ]\n      }\n    };\n    \n    if (design.imageUrl) {\n      console.log('‚úÖ Attempting to send image with caption to Telegram...');\n      console.log('üîó Image URL/data length:', design.imageUrl.length);\n      console.log('üîó Image format:', design.imageUrl.startsWith('data:') ? 'base64' : 'URL');\n      \n      try {\n        // For base64 images, convert to buffer for Telegram\n        if (design.imageUrl.startsWith('data:')) {\n          console.log('üìù Converting base64 to buffer for Telegram...');\n          const base64Data = design.imageUrl.split(',')[1];\n          const imageBuffer = Buffer.from(base64Data, 'base64');\n          console.log('üìè Buffer size:', imageBuffer.length, 'bytes');\n          \n          await ctx.replyWithPhoto({ source: imageBuffer }, { \n            caption: message,\n            parse_mode: 'Markdown',\n            ...replyMarkup \n          });\n          console.log('‚úÖ Base64 image with caption sent successfully to Telegram');\n        } else {\n          await ctx.replyWithPhoto(design.imageUrl, { \n            caption: message,\n            parse_mode: 'Markdown',\n            ...replyMarkup \n          });\n          console.log('‚úÖ URL image with caption sent successfully to Telegram');\n        }\n      } catch (imageError) {\n        console.error('‚ùå Failed to send image with caption to Telegram:', imageError);\n        console.error('‚ùå Error details:', JSON.stringify(imageError, null, 2));\n        \n        // Fallback: send text only with buttons\n        await ctx.reply(message, replyMarkup);\n        console.log('‚úÖ Sent text-only fallback message with buttons');\n      }\n    } else {\n      console.log('‚ö†Ô∏è No image URL available, sending text only with buttons');\n      await ctx.reply(message, replyMarkup);\n    }\n\n    // Temporarily disable referral bonus\n    // const user = (ctx as any).user;\n    // if (user?.referredBy) {\n    //   const referral = await storage.getReferralByUsers(user.referredBy, user.id);\n    //   if (referral && !referral.bonusGranted) {\n    //     await storage.grantReferralBonus(referral.id);\n    //     await storage.incrementUserRequests(user.referredBy, 1);\n    //   }\n    // }\n    \n  } catch (error) {\n    console.error('Designer processing error:', error);\n    await storage.updateAiRequest(requestId, {\n      status: 'failed',\n      response: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞'\n    });\n    \n    ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏–∑–∞–π–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');\n  }\n}\n\n// Error handling\nbot.catch((err, ctx) => {\n  console.error('Bot error:', err);\n  ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\\n\\nNEMO Moscow ‚Äî —Ä–µ–º–æ–Ω—Ç –ø–æ–¥ –∫–ª—é—á, –Ω–∞–¥–∑–æ—Ä –∏ –¥–∏–∑–∞–π–Ω —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.');\n});\n\nexport { bot };\n","size_bytes":24026},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean, jsonb, decimal } from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  telegramId: varchar(\"telegram_id\").notNull().unique(),\n  username: text(\"username\"),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  isSubscribed: boolean(\"is_subscribed\").default(false),\n  weeklyInspectorRequests: integer(\"weekly_inspector_requests\").default(0),\n  weeklyDesignerRequests: integer(\"weekly_designer_requests\").default(0),\n  totalPurchasedRequests: integer(\"total_purchased_requests\").default(0),\n  referralCode: varchar(\"referral_code\").unique(),\n  referredBy: varchar(\"referred_by\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  lastActivity: timestamp(\"last_activity\").defaultNow(),\n});\n\nexport const subscriptionChecks = pgTable(\"subscription_checks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  isSubscribed: boolean(\"is_subscribed\").notNull(),\n  checkedAt: timestamp(\"checked_at\").defaultNow(),\n});\n\nexport const aiRequests = pgTable(\"ai_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  agentType: varchar(\"agent_type\").notNull(), // 'inspector' | 'designer'\n  imageUrl: text(\"image_url\"),\n  prompt: text(\"prompt\"),\n  response: text(\"response\"),\n  processingTime: integer(\"processing_time\"), // in seconds\n  status: varchar(\"status\").notNull().default(\"pending\"), // 'pending' | 'processing' | 'completed' | 'failed'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n});\n\nexport const payments = pgTable(\"payments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  telegramPaymentChargeId: varchar(\"telegram_payment_charge_id\"),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  currency: varchar(\"currency\").notNull().default(\"RUB\"),\n  requestsAdded: integer(\"requests_added\").notNull(),\n  status: varchar(\"status\").notNull().default(\"pending\"), // 'pending' | 'completed' | 'failed' | 'refunded'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n});\n\nexport const referrals = pgTable(\"referrals\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  referrerId: varchar(\"referrer_id\").notNull().references(() => users.id),\n  referredId: varchar(\"referred_id\").notNull().references(() => users.id),\n  bonusGranted: boolean(\"bonus_granted\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const broadcasts = pgTable(\"broadcasts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  message: text(\"message\").notNull(),\n  targetAudience: varchar(\"target_audience\").notNull(), // 'all' | 'subscribers' | 'active' | 'paying'\n  sentCount: integer(\"sent_count\").default(0),\n  deliveredCount: integer(\"delivered_count\").default(0),\n  errorCount: integer(\"error_count\").default(0),\n  status: varchar(\"status\").notNull().default(\"draft\"), // 'draft' | 'sending' | 'completed' | 'failed'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  sentAt: timestamp(\"sent_at\"),\n});\n\nexport const broadcastDeliveries = pgTable(\"broadcast_deliveries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  broadcastId: varchar(\"broadcast_id\").notNull().references(() => broadcasts.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  status: varchar(\"status\").notNull(), // 'sent' | 'delivered' | 'failed'\n  errorMessage: text(\"error_message\"),\n  deliveredAt: timestamp(\"delivered_at\").defaultNow(),\n});\n\nexport const botSettings = pgTable(\"bot_settings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  key: varchar(\"key\").notNull().unique(),\n  value: text(\"value\").notNull(),\n  description: text(\"description\"),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const leadRequests = pgTable(\"lead_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  name: text(\"name\").notNull(),\n  phone: text(\"phone\").notNull(),\n  interest: varchar(\"interest\").notNull(), // 'repair' | 'supervision' | 'design'\n  source: varchar(\"source\"), // 'inspector' | 'designer' | 'main_menu'\n  status: varchar(\"status\").notNull().default(\"new\"), // 'new' | 'contacted' | 'closed'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  subscriptionChecks: many(subscriptionChecks),\n  aiRequests: many(aiRequests),\n  payments: many(payments),\n  referralsGiven: many(referrals, { relationName: \"referrer\" }),\n  referralsReceived: many(referrals, { relationName: \"referred\" }),\n  broadcastDeliveries: many(broadcastDeliveries),\n  leadRequests: many(leadRequests),\n}));\n\nexport const subscriptionChecksRelations = relations(subscriptionChecks, ({ one }) => ({\n  user: one(users, {\n    fields: [subscriptionChecks.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const aiRequestsRelations = relations(aiRequests, ({ one }) => ({\n  user: one(users, {\n    fields: [aiRequests.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const paymentsRelations = relations(payments, ({ one }) => ({\n  user: one(users, {\n    fields: [payments.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const referralsRelations = relations(referrals, ({ one }) => ({\n  referrer: one(users, {\n    fields: [referrals.referrerId],\n    references: [users.id],\n    relationName: \"referrer\",\n  }),\n  referred: one(users, {\n    fields: [referrals.referredId],\n    references: [users.id],\n    relationName: \"referred\",\n  }),\n}));\n\nexport const broadcastsRelations = relations(broadcasts, ({ many }) => ({\n  deliveries: many(broadcastDeliveries),\n}));\n\nexport const broadcastDeliveriesRelations = relations(broadcastDeliveries, ({ one }) => ({\n  broadcast: one(broadcasts, {\n    fields: [broadcastDeliveries.broadcastId],\n    references: [broadcasts.id],\n  }),\n  user: one(users, {\n    fields: [broadcastDeliveries.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const leadRequestsRelations = relations(leadRequests, ({ one }) => ({\n  user: one(users, {\n    fields: [leadRequests.userId],\n    references: [users.id],\n  }),\n}));\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAiRequestSchema = createInsertSchema(aiRequests).omit({\n  id: true,\n  createdAt: true,\n  completedAt: true,\n});\n\nexport const insertPaymentSchema = createInsertSchema(payments).omit({\n  id: true,\n  createdAt: true,\n  completedAt: true,\n});\n\nexport const insertBroadcastSchema = createInsertSchema(broadcasts).omit({\n  id: true,\n  createdAt: true,\n  sentAt: true,\n});\n\nexport const insertLeadRequestSchema = createInsertSchema(leadRequests).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type AiRequest = typeof aiRequests.$inferSelect;\nexport type InsertAiRequest = z.infer<typeof insertAiRequestSchema>;\nexport type Payment = typeof payments.$inferSelect;\nexport type InsertPayment = z.infer<typeof insertPaymentSchema>;\nexport type Broadcast = typeof broadcasts.$inferSelect;\nexport type InsertBroadcast = z.infer<typeof insertBroadcastSchema>;\nexport type LeadRequest = typeof leadRequests.$inferSelect;\nexport type InsertLeadRequest = z.infer<typeof insertLeadRequestSchema>;\n","size_bytes":8005},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport AdminDashboard from \"@/pages/admin-dashboard\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={AdminDashboard} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":730},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(210 79% 46%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(187 71% 38%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 94%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(210 79% 46%);\n  --chart-1: hsl(210 79% 46%);\n  --chart-2: hsl(187 71% 38%);\n  --chart-3: hsl(142 71% 45%);\n  --chart-4: hsl(39 84% 56%);\n  --chart-5: hsl(346 84% 61%);\n  --radius: 8px;\n  --font-sans: 'Roboto', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --shadow-2xs: 0px 2px 0px 0px hsl(210 79% 46% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(210 79% 46% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(210 79% 46% / 0.00), 0px 1px 2px -1px hsl(210 79% 46% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(210 79% 46% / 0.00), 0px 1px 2px -1px hsl(210 79% 46% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(210 79% 46% / 0.00), 0px 2px 4px -1px hsl(210 79% 46% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(210 79% 46% / 0.00), 0px 4px 6px -1px hsl(210 79% 46% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(210 79% 46% / 0.00), 0px 8px 10px -1px hsl(210 79% 46% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(210 79% 46% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(203.7736 87.6033% 52.5490%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(210 25% 7.8431%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --font-sans: 'Roboto', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 8px;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.sidebar-item:hover {\n  background-color: hsl(210 40% 94%);\n}\n\n.sidebar-item.active {\n  background-color: hsl(210 79% 46%);\n  color: white;\n}\n\n.stat-card {\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.stat-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n","size_bytes":4312},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ActivityFeed.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { User, Palette, CreditCard } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface Activity {\n  id: string;\n  type: string;\n  user: string;\n  action: string;\n  time: Date;\n}\n\ninterface ActivityFeedProps {\n  activity: Activity[];\n  isLoading?: boolean;\n}\n\nexport default function ActivityFeed({ activity, isLoading }: ActivityFeedProps) {\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'inspection':\n        return { icon: User, bg: 'bg-primary', color: 'text-primary-foreground' };\n      case 'design':\n        return { icon: Palette, bg: 'bg-secondary', color: 'text-secondary-foreground' };\n      case 'payment':\n        return { icon: CreditCard, bg: 'bg-green-500', color: 'text-white' };\n      default:\n        return { icon: User, bg: 'bg-gray-500', color: 'text-white' };\n    }\n  };\n\n  const formatTime = (time: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - new Date(time).getTime();\n    const minutes = Math.floor(diff / 60000);\n    \n    if (minutes < 1) return '—Å–µ–π—á–∞—Å';\n    if (minutes < 60) return `${minutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;\n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) return `${hours} —á –Ω–∞–∑–∞–¥`;\n    const days = Math.floor(hours / 24);\n    return `${days} –¥ –Ω–∞–∑–∞–¥`;\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"flex items-center space-x-3 p-3 bg-accent rounded-lg\">\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n                <div className=\"flex-1\">\n                  <Skeleton className=\"h-4 w-20 mb-1\" />\n                  <Skeleton className=\"h-3 w-32\" />\n                </div>\n                <Skeleton className=\"h-3 w-16\" />\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {activity.length > 0 ? (\n            activity.map((item) => {\n              const { icon: Icon, bg, color } = getActivityIcon(item.type);\n              return (\n                <div \n                  key={item.id} \n                  className=\"flex items-center space-x-3 p-3 bg-accent rounded-lg\"\n                  data-testid={`activity-item-${item.id}`}\n                >\n                  <div className={`w-8 h-8 ${bg} rounded-full flex items-center justify-center`}>\n                    <Icon className={`h-4 w-4 ${color}`} />\n                  </div>\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-foreground\" data-testid={`activity-user-${item.id}`}>\n                      {item.user}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground\" data-testid={`activity-action-${item.id}`}>\n                      {item.action}\n                    </p>\n                  </div>\n                  <span className=\"text-xs text-muted-foreground\" data-testid={`activity-time-${item.id}`}>\n                    {formatTime(item.time)}\n                  </span>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"text-center text-muted-foreground py-4\">\n              –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n            </div>\n          )}\n        </div>\n        <Button \n          variant=\"ghost\" \n          className=\"w-full mt-4 text-primary hover:text-primary/80\"\n          data-testid=\"button-view-all-activity\"\n        >\n          –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4065},"client/src/components/BroadcastModal.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { X } from \"lucide-react\";\n\ninterface BroadcastModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\ninterface AudienceCounts {\n  all: number;\n  subscribers: number;\n  active: number;\n  paying: number;\n}\n\nexport default function BroadcastModal({ open, onClose }: BroadcastModalProps) {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    message: \"\",\n    targetAudience: \"all\",\n    sendNow: true,\n    trackClicks: false,\n  });\n\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: audienceCounts } = useQuery<AudienceCounts>({\n    queryKey: [\"/api/broadcasts/audience-counts\"],\n    enabled: open,\n  });\n\n  const createBroadcastMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      const response = await apiRequest(\"POST\", \"/api/broadcasts\", {\n        title: data.title,\n        message: data.message,\n        targetAudience: data.targetAudience,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞\",\n        description: \"–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/broadcasts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/dashboard/stats\"] });\n      onClose();\n      setFormData({\n        title: \"\",\n        message: \"\",\n        targetAudience: \"all\",\n        sendNow: true,\n        trackClicks: false,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"–û—à–∏–±–∫–∞\",\n        description: \"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\",\n        variant: \"destructive\",\n      });\n      console.error(\"Error creating broadcast:\", error);\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.title.trim() || !formData.message.trim()) {\n      toast({\n        title: \"–û—à–∏–±–∫–∞\",\n        description: \"–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    createBroadcastMutation.mutate(formData);\n  };\n\n  const getAudienceCount = (audience: string) => {\n    if (!audienceCounts) return 0;\n    switch (audience) {\n      case 'subscribers':\n        return audienceCounts.subscribers;\n      case 'active':\n        return audienceCounts.active;\n      case 'paying':\n        return audienceCounts.paying;\n      default:\n        return audienceCounts.all;\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"w-full max-w-2xl max-h-[90vh] overflow-y-auto\" data-testid=\"modal-broadcast\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"text-xl font-bold text-foreground\">–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É</DialogTitle>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              onClick={onClose}\n              data-testid=\"button-close-modal\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </DialogHeader>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"title\" className=\"block text-sm font-medium text-foreground mb-2\">\n              –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏\n            </Label>\n            <Input\n              id=\"title\"\n              type=\"text\"\n              placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              required\n              data-testid=\"input-broadcast-title\"\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"message\" className=\"block text-sm font-medium text-foreground mb-2\">\n              –°–æ–æ–±—â–µ–Ω–∏–µ\n            </Label>\n            <Textarea\n              id=\"message\"\n              rows={4}\n              placeholder=\"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...\"\n              value={formData.message}\n              onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n              required\n              data-testid=\"textarea-broadcast-message\"\n            />\n          </div>\n          \n          <div>\n            <Label className=\"block text-sm font-medium text-foreground mb-2\">\n              –ê—É–¥–∏—Ç–æ—Ä–∏—è\n            </Label>\n            <Select \n              value={formData.targetAudience} \n              onValueChange={(value) => setFormData({ ...formData, targetAudience: value })}\n            >\n              <SelectTrigger data-testid=\"select-broadcast-audience\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">\n                  –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({getAudienceCount('all')})\n                </SelectItem>\n                <SelectItem value=\"subscribers\">\n                  –¢–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ ({getAudienceCount('subscribers')})\n                </SelectItem>\n                <SelectItem value=\"active\">\n                  –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({getAudienceCount('active')})\n                </SelectItem>\n                <SelectItem value=\"paying\">\n                  –ü–ª–∞—Ç—è—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({getAudienceCount('paying')})\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"sendNow\"\n                checked={formData.sendNow}\n                onCheckedChange={(checked) => setFormData({ ...formData, sendNow: !!checked })}\n                data-testid=\"checkbox-send-now\"\n              />\n              <Label htmlFor=\"sendNow\" className=\"text-sm text-foreground\">\n                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å\n              </Label>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"trackClicks\"\n                checked={formData.trackClicks}\n                onCheckedChange={(checked) => setFormData({ ...formData, trackClicks: !!checked })}\n                data-testid=\"checkbox-track-clicks\"\n              />\n              <Label htmlFor=\"trackClicks\" className=\"text-sm text-foreground\">\n                –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥—ã\n              </Label>\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-border\">\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={onClose}\n              data-testid=\"button-cancel-broadcast\"\n            >\n              –û—Ç–º–µ–Ω–∞\n            </Button>\n            <Button \n              type=\"submit\" \n              disabled={createBroadcastMutation.isPending}\n              data-testid=\"button-submit-broadcast\"\n            >\n              {createBroadcastMutation.isPending ? \"–°–æ–∑–¥–∞–Ω–∏–µ...\" : \"–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\"}\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":7967},"client/src/components/Sidebar.tsx":{"content":"import { cn } from \"@/lib/utils\";\nimport { Construction, BarChart3, Users, ToyBrick, Car, CreditCard, Share, Settings } from \"lucide-react\";\n\ninterface SidebarProps {\n  activeTab: string;\n  onTabChange: (tab: string) => void;\n}\n\nconst sidebarItems = [\n  { id: \"dashboard\", label: \"–û–±–∑–æ—Ä\", icon: BarChart3 },\n  { id: \"users\", label: \"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\", icon: Users },\n  { id: \"ai\", label: \"–ò–ò –ê–≥–µ–Ω—Ç—ã\", icon: ToyBrick },\n  { id: \"broadcasts\", label: \"–†–∞—Å—Å—ã–ª–∫–∏\", icon: Car },\n  { id: \"payments\", label: \"–ü–ª–∞—Ç–µ–∂–∏\", icon: CreditCard },\n  { id: \"referrals\", label: \"–†–µ—Ñ–µ—Ä–∞–ª—ã\", icon: Share },\n  { id: \"settings\", label: \"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\", icon: Settings },\n];\n\nexport default function Sidebar({ activeTab, onTabChange }: SidebarProps) {\n  return (\n    <div className=\"w-64 bg-card shadow-lg border-r border-border\">\n      <div className=\"p-6 border-b border-border\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n            <Construction className=\"h-6 w-6 text-primary-foreground\" />\n          </div>\n          <div>\n            <h1 className=\"text-lg font-bold text-foreground\">NEMO Moscow</h1>\n            <p className=\"text-sm text-muted-foreground\">Bot Admin</p>\n          </div>\n        </div>\n      </div>\n      \n      <nav className=\"mt-6\">\n        <div className=\"px-3\">\n          {sidebarItems.map((item) => {\n            const Icon = item.icon;\n            return (\n              <div\n                key={item.id}\n                className={cn(\n                  \"sidebar-item flex items-center px-3 py-2 rounded-md cursor-pointer mb-1\",\n                  activeTab === item.id && \"active\"\n                )}\n                onClick={() => onTabChange(item.id)}\n                data-testid={`sidebar-item-${item.id}`}\n              >\n                <Icon className=\"mr-3 h-5 w-5\" />\n                <span className=\"font-medium\">{item.label}</span>\n              </div>\n            );\n          })}\n        </div>\n      </nav>\n    </div>\n  );\n}\n","size_bytes":2100},"client/src/components/StatCard.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { LucideIcon } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  growth: number;\n  icon: LucideIcon;\n  iconColor: string;\n  iconBg: string;\n  isLoading?: boolean;\n  \"data-testid\"?: string;\n}\n\nexport default function StatCard({ \n  title, \n  value, \n  growth, \n  icon: Icon, \n  iconColor, \n  iconBg, \n  isLoading,\n  \"data-testid\": testId \n}: StatCardProps) {\n  if (isLoading) {\n    return (\n      <Card className=\"stat-card\">\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <Skeleton className=\"h-4 w-32 mb-2\" />\n              <Skeleton className=\"h-8 w-20\" />\n            </div>\n            <Skeleton className=\"h-12 w-12 rounded-full\" />\n          </div>\n          <div className=\"flex items-center mt-4\">\n            <Skeleton className=\"h-4 w-12 mr-2\" />\n            <Skeleton className=\"h-4 w-16\" />\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"stat-card cursor-pointer\" data-testid={testId}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-muted-foreground text-sm font-medium\">{title}</p>\n            <p className=\"text-2xl font-bold text-foreground\" data-testid={`${testId}-value`}>\n              {typeof value === 'number' ? value.toLocaleString() : value}\n            </p>\n          </div>\n          <div className={`${iconBg} p-3 rounded-full`}>\n            <Icon className={`h-6 w-6 ${iconColor}`} />\n          </div>\n        </div>\n        <div className=\"flex items-center mt-4 text-sm\">\n          <span \n            className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}\n            data-testid={`${testId}-growth`}\n          >\n            {growth >= 0 ? '+' : ''}{growth.toFixed(1)}%\n          </span>\n          <span className=\"text-muted-foreground ml-2\">–∑–∞ –Ω–µ–¥–µ–ª—é</span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":2185},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin-dashboard.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Sidebar from \"@/components/Sidebar\";\nimport StatCard from \"@/components/StatCard\";\nimport ActivityFeed from \"@/components/ActivityFeed\";\nimport BroadcastModal from \"@/components/BroadcastModal\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { RefreshCw, Plus, Eye, Construction, Users, ToyBrick, Car, CreditCard, Share, Settings } from \"lucide-react\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\ninterface DashboardStats {\n  totalUsers: number;\n  subscribers: number;\n  weeklyAiRequests: number;\n  monthlyRevenue: number;\n  weeklyGrowth: number;\n  subscriberGrowth: number;\n  aiRequestsGrowth: number;\n  revenueGrowth: number;\n}\n\ninterface Activity {\n  id: string;\n  type: string;\n  user: string;\n  action: string;\n  time: Date;\n}\n\ninterface Broadcast {\n  id: string;\n  title: string;\n  sentCount: number;\n  deliveredCount: number;\n  createdAt: Date;\n}\n\ninterface AudienceCounts {\n  all: number;\n  subscribers: number;\n  active: number;\n  paying: number;\n}\n\ninterface AISettings {\n  imageGenerationModel: string;\n  imageQuality: string;\n}\n\nexport default function AdminDashboard() {\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [showBroadcastModal, setShowBroadcastModal] = useState(false);\n  const [selectedModel, setSelectedModel] = useState(\"gpt-image-1\");\n  const [selectedQuality, setSelectedQuality] = useState(\"medium\");\n  const [testImage, setTestImage] = useState<File | null>(null);\n  const [testPrompt, setTestPrompt] = useState(\"Transform to modern style with neutral accents\");\n  const { toast } = useToast();\n\n  const { data: stats, isLoading: statsLoading, refetch: refetchStats } = useQuery<DashboardStats>({\n    queryKey: [\"/api/dashboard/stats\"],\n  });\n\n  const { data: activity, isLoading: activityLoading } = useQuery<Activity[]>({\n    queryKey: [\"/api/dashboard/activity\"],\n  });\n\n  const { data: broadcasts, isLoading: broadcastsLoading } = useQuery<Broadcast[]>({\n    queryKey: [\"/api/broadcasts\"],\n  });\n\n  const { data: audienceCounts } = useQuery<AudienceCounts>({\n    queryKey: [\"/api/broadcasts/audience-counts\"],\n  });\n\n  const { data: aiSettings } = useQuery<AISettings>({\n    queryKey: [\"/api/ai/settings\"],\n  });\n\n  // Update local state when settings are loaded\n  useEffect(() => {\n    if (aiSettings) {\n      setSelectedModel(aiSettings.imageGenerationModel);\n      setSelectedQuality(aiSettings.imageQuality);\n    }\n  }, [aiSettings]);\n\n  const saveSettingsMutation = useMutation({\n    mutationFn: async (settings: Partial<AISettings>) => {\n      const response = await apiRequest(\"POST\", \"/api/ai/settings\", settings);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\",\n        description: \"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã\"\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/ai/settings\"] });\n    },\n    onError: () => {\n      toast({\n        title: \"–û—à–∏–±–∫–∞\",\n        description: \"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const testGenerationMutation = useMutation({\n    mutationFn: async (data: { imageUrl: string; prompt: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/ai/test-generation\", data);\n      return response.json();\n    },\n    onSuccess: (data: any) => {\n      if (data.success) {\n        toast({\n          title: \"–¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω\",\n          description: `–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –º–æ–¥–µ–ª—å—é ${data.model} –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ`\n        });\n      } else {\n        toast({\n          title: \"–¢–µ—Å—Ç –Ω–µ—É–¥–∞—á–µ–Ω\",\n          description: data.error || \"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\",\n          variant: \"destructive\"\n        });\n      }\n    },\n    onError: (error) => {\n      toast({\n        title: \"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\",\n        description: \"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleRefresh = () => {\n    refetchStats();\n  };\n\n  const handleSaveSettings = () => {\n    saveSettingsMutation.mutate({\n      imageGenerationModel: selectedModel,\n      imageQuality: selectedQuality\n    });\n  };\n\n  const handleTestGeneration = () => {\n    if (!testImage) {\n      toast({\n        title: \"–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\",\n        description: \"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    // For demo purposes, using a test that doesn't require actual image processing\n    const demoImageUrl = \"https://example.com/demo-image.jpg\";\n    \n    testGenerationMutation.mutate({\n      imageUrl: demoImageUrl,\n      prompt: testPrompt\n    });\n  };\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setTestImage(file);\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-background\">\n      <Sidebar activeTab={activeTab} onTabChange={setActiveTab} />\n      \n      <div className=\"flex-1 overflow-auto\">\n        <header className=\"bg-card border-b border-border px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-foreground\">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>\n              <p className=\"text-muted-foreground\">Telegram Bot NEMO Moscow</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2 text-sm\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <span className=\"text-muted-foreground\">–ë–æ—Ç –æ–Ω–ª–∞–π–Ω</span>\n              </div>\n              <Button \n                onClick={handleRefresh} \n                className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n                data-testid=\"button-refresh\"\n              >\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\n                –û–±–Ω–æ–≤–∏—Ç—å\n              </Button>\n            </div>\n          </div>\n        </header>\n\n        <div className=\"p-6\">\n          {activeTab === \"dashboard\" && (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n                <StatCard\n                  title=\"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\"\n                  value={stats?.totalUsers || 0}\n                  growth={stats?.weeklyGrowth || 0}\n                  icon={Users}\n                  iconColor=\"text-blue-600\"\n                  iconBg=\"bg-blue-100\"\n                  isLoading={statsLoading}\n                  data-testid=\"stat-card-users\"\n                />\n                \n                <StatCard\n                  title=\"–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –∫–∞–Ω–∞–ª–∞\"\n                  value={stats?.subscribers || 0}\n                  growth={stats?.subscriberGrowth || 0}\n                  icon={Users}\n                  iconColor=\"text-green-600\"\n                  iconBg=\"bg-green-100\"\n                  isLoading={statsLoading}\n                  data-testid=\"stat-card-subscribers\"\n                />\n                \n                <StatCard\n                  title=\"–ò–ò –∑–∞–ø—Ä–æ—Å–æ–≤/–Ω–µ–¥–µ–ª—è\"\n                  value={stats?.weeklyAiRequests || 0}\n                  growth={stats?.aiRequestsGrowth || 0}\n                  icon={ToyBrick}\n                  iconColor=\"text-purple-600\"\n                  iconBg=\"bg-purple-100\"\n                  isLoading={statsLoading}\n                  data-testid=\"stat-card-ai-requests\"\n                />\n                \n                <StatCard\n                  title=\"–î–æ—Ö–æ–¥/–º–µ—Å—è—Ü\"\n                  value={`‚ÇΩ${stats?.monthlyRevenue?.toLocaleString() || 0}`}\n                  growth={stats?.revenueGrowth || 0}\n                  icon={CreditCard}\n                  iconColor=\"text-yellow-600\"\n                  iconBg=\"bg-yellow-100\"\n                  isLoading={statsLoading}\n                  data-testid=\"stat-card-revenue\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <CardTitle>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò –∞–≥–µ–Ω—Ç–æ–≤</CardTitle>\n                    <select className=\"text-sm border border-border rounded px-3 py-1\" data-testid=\"select-chart-period\">\n                      <option>7 –¥–Ω–µ–π</option>\n                      <option>30 –¥–Ω–µ–π</option>\n                      <option>90 –¥–Ω–µ–π</option>\n                    </select>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-64 bg-muted rounded flex items-center justify-center\">\n                      <div className=\"text-center\">\n                        <ToyBrick className=\"h-12 w-12 text-muted-foreground mx-auto mb-2\" />\n                        <p className=\"text-muted-foreground\">–ì—Ä–∞—Ñ–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò –∞–≥–µ–Ω—Ç–æ–≤</p>\n                        <p className=\"text-sm text-muted-foreground\">–ù–∞–¥–∑–æ—Ä—â–∏–∫: 60% | –î–∏–∑–∞–π–Ω–µ—Ä: 40%</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <ActivityFeed activity={activity || []} isLoading={activityLoading} />\n              </div>\n\n              <Card className=\"mb-8\">\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                  <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏</CardTitle>\n                  <Button \n                    onClick={() => setShowBroadcastModal(true)}\n                    className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n                    data-testid=\"button-create-broadcast\"\n                  >\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n                  </Button>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h4>\n                      <p className=\"text-2xl font-bold text-primary\" data-testid=\"text-audience-all\">\n                        {audienceCounts?.all || 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">–í—Å–µ–≥–æ –≤ –±–æ—Ç–µ</p>\n                    </div>\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">–ü–æ–¥–ø–∏—Å—á–∏–∫–∏</h4>\n                      <p className=\"text-2xl font-bold text-secondary\" data-testid=\"text-audience-subscribers\">\n                        {audienceCounts?.subscribers || 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">–ü–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª</p>\n                    </div>\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">–ê–∫—Ç–∏–≤–Ω—ã–µ</h4>\n                      <p className=\"text-2xl font-bold text-green-600\" data-testid=\"text-audience-active\">\n                        {audienceCounts?.active || 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 7 –¥–Ω–µ–π</p>\n                    </div>\n                  </div>\n\n                  <div className=\"border border-border rounded-lg overflow-hidden\">\n                    <div className=\"bg-muted px-4 py-3 border-b border-border\">\n                      <h4 className=\"font-medium text-foreground\">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏</h4>\n                    </div>\n                    <div className=\"divide-y divide-border\">\n                      {broadcastsLoading ? (\n                        <div className=\"p-4 text-center text-muted-foreground\">–ó–∞–≥—Ä—É–∑–∫–∞...</div>\n                      ) : broadcasts && broadcasts.length > 0 ? (\n                        broadcasts.map((broadcast) => (\n                          <div key={broadcast.id} className=\"p-4 flex items-center justify-between\" data-testid={`broadcast-item-${broadcast.id}`}>\n                            <div className=\"flex-1\">\n                              <p className=\"font-medium text-foreground\">{broadcast.title}</p>\n                              <div className=\"flex items-center space-x-4 mt-1\">\n                                <span className=\"text-sm text-muted-foreground\">\n                                  –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {broadcast.sentCount} —á–µ–ª.\n                                </span>\n                                <span className=\"text-sm text-muted-foreground\">\n                                  –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {broadcast.deliveredCount} —á–µ–ª.\n                                </span>\n                                <span className=\"text-sm text-muted-foreground\">\n                                  {new Date(broadcast.createdAt).toLocaleDateString('ru-RU')}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              <Badge variant=\"secondary\">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</Badge>\n                              <Button variant=\"ghost\" size=\"sm\" data-testid={`button-view-broadcast-${broadcast.id}`}>\n                                <Eye className=\"h-4 w-4\" />\n                              </Button>\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        <div className=\"p-4 text-center text-muted-foreground\">–ù–µ—Ç —Ä–∞—Å—Å—ã–ª–æ–∫</div>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <Card className=\"cursor-pointer hover:shadow-md transition-shadow\" data-testid=\"card-quick-action-users\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-blue-100 p-3 rounded-full\">\n                        <Users className=\"h-6 w-6 text-blue-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-foreground\">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h4>\n                        <p className=\"text-sm text-muted-foreground\">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"cursor-pointer hover:shadow-md transition-shadow\" data-testid=\"card-quick-action-ai\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-purple-100 p-3 rounded-full\">\n                        <ToyBrick className=\"h-6 w-6 text-purple-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-foreground\">–ò–ò –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</h4>\n                        <p className=\"text-sm text-muted-foreground\">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"cursor-pointer hover:shadow-md transition-shadow\" data-testid=\"card-quick-action-payments\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-green-100 p-3 rounded-full\">\n                        <CreditCard className=\"h-6 w-6 text-green-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-foreground\">–ü–ª–∞—Ç–µ–∂–∏</h4>\n                        <p className=\"text-sm text-muted-foreground\">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –≤—ã—Ä—É—á–∫–∞</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"cursor-pointer hover:shadow-md transition-shadow\" data-testid=\"card-quick-action-settings\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-orange-100 p-3 rounded-full\">\n                        <Settings className=\"h-6 w-6 text-orange-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-foreground\">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h4>\n                        <p className=\"text-sm text-muted-foreground\">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </>\n          )}\n\n          {activeTab === \"ai\" && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Model Selection Card */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <ToyBrick className=\"h-5 w-5\" />\n                      <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π –ò–ò</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                          –ú–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n                        </label>\n                        <Select value={selectedModel} onValueChange={setSelectedModel}>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"gpt-image-1\">gpt-image-1 (Native Gemini via laozhang.ai)</SelectItem>\n                            <SelectItem value=\"gemini-2.5-flash-image-preview\">gemini-2.5-flash-image-preview (Native Gemini API)</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          –ú–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ò–ò-–¥–∏–∑–∞–π–Ω–µ—Ä–µ\n                        </p>\n                      </div>\n                      \n                      <div>\n                        <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                          –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n                        </label>\n                        <Select value={selectedQuality} onValueChange={setSelectedQuality}>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"low\">–ù–∏–∑–∫–æ–µ (–±—ã—Å—Ç—Ä–æ, –¥–µ—à–µ–≤–æ)</SelectItem>\n                            <SelectItem value=\"medium\">–°—Ä–µ–¥–Ω–µ–µ (–±–∞–ª–∞–Ω—Å)</SelectItem>\n                            <SelectItem value=\"high\">–í—ã—Å–æ–∫–æ–µ (–º–µ–¥–ª–µ–Ω–Ω–æ, –¥–æ—Ä–æ–≥–æ)</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <Button \n                        className=\"w-full\" \n                        onClick={handleSaveSettings}\n                        disabled={saveSettingsMutation.isPending}\n                        data-testid=\"button-save-ai-settings\"\n                      >\n                        {saveSettingsMutation.isPending ? \"–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è...\" : \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\"}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Test Generation Card */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                          –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n                        </label>\n                        <Input \n                          type=\"file\" \n                          accept=\"image/*\"\n                          onChange={handleImageUpload}\n                          className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary file:text-primary-foreground hover:file:bg-primary/90\"\n                          data-testid=\"input-test-image\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                          –ü—Ä–æ–º–ø—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏\n                        </label>\n                        <Input \n                          placeholder=\"–ù–∞–ø—Ä–∏–º–µ—Ä: modern minimalist living room with white furniture\"\n                          value={testPrompt}\n                          onChange={(e) => setTestPrompt(e.target.value)}\n                          data-testid=\"input-test-prompt\"\n                        />\n                      </div>\n\n                      <Button \n                        className=\"w-full\" \n                        variant=\"outline\" \n                        onClick={handleTestGeneration}\n                        disabled={testGenerationMutation.isPending}\n                        data-testid=\"button-test-generation\"\n                      >\n                        {testGenerationMutation.isPending ? \"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è...\" : \"üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\"}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* AI Usage Statistics */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò –∞–≥–µ–Ω—Ç–æ–≤</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">üîç –ò–ò-–ù–∞–¥–∑–æ—Ä—â–∏–∫</h4>\n                      <p className=\"text-2xl font-bold text-blue-600\" data-testid=\"text-inspector-usage\">\n                        {stats?.weeklyAiRequests ? Math.floor(stats.weeklyAiRequests * 0.6) : 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">60% –æ—Ç –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</p>\n                    </div>\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">üé® –ò–ò-–î–∏–∑–∞–π–Ω–µ—Ä</h4>\n                      <p className=\"text-2xl font-bold text-purple-600\" data-testid=\"text-designer-usage\">\n                        {stats?.weeklyAiRequests ? Math.floor(stats.weeklyAiRequests * 0.4) : 0}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">40% –æ—Ç –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</p>\n                    </div>\n                    <div className=\"p-4 border border-border rounded-lg\">\n                      <h4 className=\"font-medium text-foreground mb-2\">‚ö° –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è</h4>\n                      <p className=\"text-2xl font-bold text-green-600\" data-testid=\"text-average-time\">45—Å</p>\n                      <p className=\"text-sm text-muted-foreground\">–û–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <BroadcastModal \n        open={showBroadcastModal} \n        onClose={() => setShowBroadcastModal(false)} \n      />\n    </div>\n  );\n}","size_bytes":25448},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"server/aiSettings.ts":{"content":"// AI Settings configuration - separate file to avoid circular dependencies\n\nexport interface AISettings {\n  imageGenerationModel: string;\n  imageQuality: string;\n}\n\n// Simple in-memory settings store (could be moved to database later)\nconst aiSettings: AISettings = {\n  imageGenerationModel: \"gpt-image-1\",\n  imageQuality: \"medium\"\n};\n\n// Get current AI settings\nexport function getCurrentAISettings(): AISettings {\n  return aiSettings;\n}\n\n// Update AI settings\nexport function updateAISettings(newSettings: Partial<AISettings>): AISettings {\n  Object.assign(aiSettings, newSettings);\n  return aiSettings;\n}","size_bytes":608},"server/cache.ts":{"content":"// Simple in-memory cache for performance optimization\ninterface CacheEntry {\n  data: any;\n  timestamp: number;\n  ttl: number; // Time to live in milliseconds\n}\n\nclass SimpleCache {\n  private cache = new Map<string, CacheEntry>();\n\n  set(key: string, data: any, ttlMinutes: number = 5): void {\n    const ttl = ttlMinutes * 60 * 1000;\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl\n    });\n  }\n\n  get(key: string): any | null {\n    const entry = this.cache.get(key);\n    if (!entry) return null;\n\n    const now = Date.now();\n    const isExpired = (now - entry.timestamp) > entry.ttl;\n    \n    if (isExpired) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return entry.data;\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  // Clean expired entries\n  cleanup(): void {\n    const now = Date.now();\n    const keysToDelete: string[] = [];\n    \n    this.cache.forEach((entry, key) => {\n      const isExpired = (now - entry.timestamp) > entry.ttl;\n      if (isExpired) {\n        keysToDelete.push(key);\n      }\n    });\n    \n    keysToDelete.forEach(key => this.cache.delete(key));\n  }\n}\n\nexport const cache = new SimpleCache();\n\n// Cleanup expired entries every 10 minutes\nsetInterval(() => {\n  cache.cleanup();\n}, 10 * 60 * 1000);","size_bytes":1274}},"version":1}